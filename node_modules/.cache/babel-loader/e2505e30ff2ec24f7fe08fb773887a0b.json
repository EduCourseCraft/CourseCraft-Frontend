{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\"; // Course courseImg\n\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n  _s();\n\n  ////////////////////////////\n  // GET COURSES DATA\n  ////////////////////////////\n  const [fetchData, setFetchData] = useState([]);\n  useEffect(() => {\n    let isMounted = true; // Flag to track component mount state\n\n    const getCourses = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`);\n\n        if (!isMounted) {\n          // Component has unmounted, abort further processing\n          return;\n        }\n\n        const data = await response.json();\n        setFetchData(data);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    getCourses(); // Cleanup function\n\n    return () => {\n      isMounted = false; // Component is unmounting, update flag\n    };\n  }, []); ////////////////////////////\n  // RENDER CATEGORIES TABS\n  ////////////////////////////\n\n  const [fetchedCategories, setFetchedCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(undefined);\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`);\n        const data = await response.json();\n        const filtered = data.filter(category => category.active === true);\n        console.log(filtered);\n        filtered.unshift({\n          id: 12341,\n          name: \"Mostrar todo\"\n        });\n        setFetchedCategories(filtered);\n        setActiveCategory(\"Mostrar todo\");\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const renderCoursePanel = selectedCategory => {\n    const filteredCourses = fetchData.filter(course => selectedCategory === \"Mostrar todo\" || course.courseData.category && course.courseData.category.includes(selectedCategory));\n    const offset = currentPage * coursesPerPage;\n    const currentPageCourses = filteredCourses.slice(offset, offset + coursesPerPage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentPageCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4 col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(CourseSingleTwo, {\n          courseClass: \"courses-item md-mb-30\",\n          courseImg: courseImg1,\n          courseTitle: course.courseData.name || \"Curso en desarrollo\",\n          courseDuration: course.courseData.duration || \"10\",\n          courseId: course.id || \"112\",\n          courseCategory: course.courseData.category && course.courseData.category.length > 0 ? course.courseData.category.join(\", \") : \"Web development\",\n          courseDetail: course.courseData.detail\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 7\n        }, this)\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 4\n    }, this);\n  };\n\n  const handleTabClick = category => {\n    setActiveCategory(category);\n    setCurrentPage(0);\n  };\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\"\n    });\n    setCurrentPage(selected);\n  };\n\n  const totalCourses = activeCategory === \"Mostrar todo\" ? fetchData.length : fetchData.filter(course => {\n    if (course.courseData.category && course.courseData.category.length > 0) {\n      return course.courseData.category.includes(activeCategory);\n    } else {\n      return false;\n    }\n  }).length;\n  const pageCount = Math.ceil(totalCourses / coursesPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rs-popular-course\",\n    className: \"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          className: \"gridFilter text-center mb-10 md-mb-10\",\n          children: fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabClick(category.name),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 9\n            }, this)\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 6\n        }, this), fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 9\n            }, this), renderCoursePanel(category.name), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              className: \"pagination\",\n              previousLabel: \"Previous\",\n              nextLabel: \"Next\",\n              breakLabel: \"...\",\n              pageCount: pageCount,\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 5,\n              onPageChange: handlePageChange,\n              containerClassName: \"pagination\",\n              activeClassName: \"active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 8\n          }, this)\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CoursePart, \"XoRSGCx3fKTj/TDZ7e3kDbuU3hw=\");\n\n_c = CoursePart;\nexport default CoursePart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePart\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js"],"names":["React","useEffect","useState","Tab","Tabs","TabList","TabPanel","CourseSingleTwo","ReactPaginate","courseImg1","CoursePart","fetchData","setFetchData","isMounted","getCourses","response","fetch","process","env","REACT_APP_ROOT_URL","REACT_APP_COURSES_GET_ALL","data","json","error","console","fetchedCategories","setFetchedCategories","activeCategory","setActiveCategory","undefined","currentPage","setCurrentPage","coursesPerPage","fetchCategories","REACT_APP_CATEGORIES_GET_ALL","filtered","filter","category","active","log","unshift","id","name","renderCoursePanel","selectedCategory","filteredCourses","course","courseData","includes","offset","currentPageCourses","slice","map","duration","length","join","detail","handleTabClick","handlePageChange","selected","window","scrollTo","top","behavior","totalCourses","pageCount","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\";\n\n// Course courseImg\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n ////////////////////////////\n // GET COURSES DATA\n ////////////////////////////\n\n const [fetchData, setFetchData] = useState([]);\n\n useEffect(() => {\n   let isMounted = true; // Flag to track component mount state\n   \n   const getCourses = async () => {\n     try {\n       const response = await fetch(\n         `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`\n       );\n       \n       if (!isMounted) {\n         // Component has unmounted, abort further processing\n         return;\n       }\n \n       const data = await response.json();\n       setFetchData(data);\n     } catch (error) {\n       console.error(\"Error fetching categories:\", error);\n     }\n   };\n \n   getCourses();\n \n   // Cleanup function\n   return () => {\n     isMounted = false; // Component is unmounting, update flag\n   };\n }, []);\n\n ////////////////////////////\n // RENDER CATEGORIES TABS\n ////////////////////////////\n const [fetchedCategories, setFetchedCategories] = useState([]);\n const [activeCategory, setActiveCategory] = useState(undefined);\n const [currentPage, setCurrentPage] = useState(0);\n const coursesPerPage = 9;\n\n useEffect(() => {\n  const fetchCategories = async () => {\n   try {\n    const response = await fetch(\n     `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`\n    );\n    const data = await response.json();\n    const filtered = data.filter((category) => category.active === true);\n    console.log(filtered);\n    filtered.unshift({\n     id: 12341,\n     name: \"Mostrar todo\",\n    });\n\n    setFetchedCategories(filtered);\n    setActiveCategory(\"Mostrar todo\");\n   } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n   }\n  };\n\n  fetchCategories();\n }, []);\n\n const renderCoursePanel = (selectedCategory) => {\n  const filteredCourses = fetchData.filter(\n   (course) =>\n    selectedCategory === \"Mostrar todo\" ||\n    (course.courseData.category &&\n     course.courseData.category.includes(selectedCategory))\n  );\n\n  const offset = currentPage * coursesPerPage;\n  const currentPageCourses = filteredCourses.slice(\n   offset,\n   offset + coursesPerPage\n  );\n\n  return (\n   <div className=\"row\">\n    {currentPageCourses.map((course) => (\n     <div key={course.id} className=\"col-lg-4 col-md-6\">\n      <CourseSingleTwo\n       courseClass=\"courses-item md-mb-30\"\n       courseImg={courseImg1}\n       courseTitle={course.courseData.name || \"Curso en desarrollo\"}\n       courseDuration={course.courseData.duration || \"10\"}\n       courseId={course.id || \"112\"}\n       courseCategory={\n        course.courseData.category && course.courseData.category.length > 0\n         ? course.courseData.category.join(\", \")\n         : \"Web development\"\n       }\n       courseDetail={course.courseData.detail}\n      />\n     </div>\n    ))}\n   </div>\n  );\n };\n\n const handleTabClick = (category) => {\n  setActiveCategory(category);\n  setCurrentPage(0);\n };\n\n const handlePageChange = ({ selected }) => {\n  window.scrollTo({\n   top: 250,\n   behavior: \"smooth\",\n  });\n  setCurrentPage(selected);\n };\n\n const totalCourses =\n  activeCategory === \"Mostrar todo\"\n   ? fetchData.length\n   : fetchData.filter((course) => {\n    if (course.courseData.category && course.courseData.category.length > 0) {\n     return course.courseData.category.includes(activeCategory);\n    } else {\n     return false;\n    }\n   }).length;\n\n const pageCount = Math.ceil(totalCourses / coursesPerPage);\n\n return (\n  <div\n   id=\"rs-popular-course\"\n   className=\"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\"\n  >\n   <div className=\"container\">\n    <Tabs>\n     <TabList className=\"gridFilter text-center mb-10 md-mb-10\">\n      {fetchedCategories.map((category) => (\n       <Tab key={category.id} onClick={() => handleTabClick(category.name)}>\n        <button>{category.name}</button>\n       </Tab>\n      ))}\n     </TabList>\n     {fetchedCategories.map((category) => (\n      <TabPanel key={category.id}>\n       <div>\n        <h2>{category.name}</h2>\n        {renderCoursePanel(category.name)}\n        <ReactPaginate\n         className=\"pagination\"\n         previousLabel={\"Previous\"}\n         nextLabel={\"Next\"}\n         breakLabel={\"...\"}\n         pageCount={pageCount}\n         marginPagesDisplayed={2}\n         pageRangeDisplayed={5}\n         onPageChange={handlePageChange}\n         containerClassName={\"pagination\"}\n         activeClassName={\"active\"}\n        />\n       </div>\n      </TabPanel>\n     ))}\n    </Tabs>\n   </div>\n  </div>\n );\n};\n\nexport default CoursePart;\n"]},"metadata":{},"sourceType":"module"}