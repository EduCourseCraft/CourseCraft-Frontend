{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/QuizContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst QuizContent = ({\n  quizData\n}) => {\n  _s();\n\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(quizData.questions.length).fill(null));\n  const [correctAnswers, setCorrectAnswers] = useState(quizData.questions.map(question => question.correctAnswer));\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleOptionSelect = (questionIndex, answerIndex) => {\n    const newAnswers = [...answers];\n    newAnswers[questionIndex] = answerIndex === newAnswers[questionIndex] ? null : answerIndex;\n    setAnswers(newAnswers);\n    setSelectedAnswers([...selectedAnswers, answerIndex]);\n  };\n\n  const handleSubmit = () => {\n    const result = answers.map((answer, questionIndex) => ({\n      answer,\n      isCorrect: answer === quizData.questions[questionIndex].correctAnswer\n    }));\n    setAnswers(result);\n    setIsSubmitted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box quiz-content\",\n    children: [quizData.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: question.answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `option ${answers[questionIndex] === answerIndex ? 'selected' : ''} ${answers[questionIndex] === answerIndex && answers[questionIndex] === quizData.questions[questionIndex].correctAnswer ? 'correct' : ''} ${answers[questionIndex] === answerIndex && answers[questionIndex] !== quizData.questions[questionIndex].correctAnswer ? 'incorrect' : ''}`,\n          onClick: () => handleOptionSelect(questionIndex, answerIndex),\n          children: answer\n        }, answerIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 6\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      disabled: isSubmitted,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuizContent, \"vnrU3IZ+FxEDPko2nmDRSk8FGLo=\");\n\n_c = QuizContent;\nexport default QuizContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizContent\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/QuizContent.js"],"names":["React","useState","Button","QuizContent","quizData","selectedAnswers","setSelectedAnswers","Array","questions","length","fill","correctAnswers","setCorrectAnswers","map","question","correctAnswer","isSubmitted","setIsSubmitted","handleOptionSelect","questionIndex","answerIndex","newAnswers","answers","setAnswers","handleSubmit","result","answer","isCorrect"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst QuizContent = ({ quizData }) => {\n const [selectedAnswers, setSelectedAnswers] = useState(new Array(quizData.questions.length).fill(null));\n const [correctAnswers, setCorrectAnswers] = useState(quizData.questions.map(question => question.correctAnswer));\n \n const [ isSubmitted, setIsSubmitted ] = useState(false)\n\n const handleOptionSelect = (questionIndex, answerIndex) => {\n  const newAnswers = [...answers];\n  newAnswers[questionIndex] = answerIndex === newAnswers[questionIndex] ? null : answerIndex;\n  setAnswers(newAnswers);\n  setSelectedAnswers([...selectedAnswers, answerIndex]);\n };\n const handleSubmit = () => {\n  const result = answers.map((answer, questionIndex) => ({\n   answer,\n   isCorrect: answer === quizData.questions[questionIndex].correctAnswer\n  }));\n  setAnswers(result);\n  setIsSubmitted(true);\n };\n\n return (\n  <div className=\"content-box quiz-content\">\n   {/* Render quiz questions and options */}\n   {quizData.questions.map((question, questionIndex) => (\n    <div key={questionIndex} className=\"question-container\">\n     <h3>{question.question}</h3>\n     <div className=\"options-container\">\n      {question.answers.map((answer, answerIndex) => (\n       <div\n        key={answerIndex}\n        className={`option ${answers[questionIndex] === answerIndex ? 'selected' : ''} ${answers[questionIndex] === answerIndex && answers[questionIndex] === quizData.questions[questionIndex].correctAnswer ? 'correct' : ''} ${answers[questionIndex] === answerIndex && answers[questionIndex] !== quizData.questions[questionIndex].correctAnswer ? 'incorrect' : ''}`}\n        onClick={() => handleOptionSelect(questionIndex, answerIndex)}\n       >\n        {answer}\n       </div>\n      ))}\n     </div>\n    </div>\n   ))}\n   {/* Submit button */}\n   <Button onClick={handleSubmit} disabled={isSubmitted}>Submit</Button>\n  </div>\n );\n};\n\nexport default QuizContent;\n"]},"metadata":{},"sourceType":"module"}