{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Create/Quiz.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\n\nconst Quiz = props => {\n  _s();\n\n  const {} = props;\n  const [quizContent, setQuizContent] = useState([{\n    question: \"\",\n    answers: [\"\", \"\", \"\", \"\"],\n    correct: \"\"\n  }]);\n\n  const handleQuestion = (e, index) => {\n    const {\n      name,\n      value\n    } = e.target;\n    const updatedQuestion = [...quizContent];\n    updatedQuestion[index] = { ...updatedQuestion[index],\n      [name]: value\n    };\n    setQuizContent(updatedQuestion);\n  };\n\n  const handleAnswerChange = (questionIndex, answerIndex, e) => {\n    const {\n      value\n    } = e.target;\n    const updatedQuizContent = [...quizContent];\n\n    if (!updatedQuizContent[questionIndex].answers) {\n      updatedQuizContent[questionIndex].answers = [];\n    }\n\n    const updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n    updatedAnswers[answerIndex] = value;\n    updatedQuizContent[questionIndex] = { ...updatedQuizContent[questionIndex],\n      answers: updatedAnswers\n    };\n    setQuizContent(updatedQuizContent);\n  };\n\n  const handleCorrectAnswerChange = (event, questionIndex) => {\n    const correctAnswerIndex = Number(event.target.value);\n    const updatedQuizContent = [...quizContent];\n    const updatedAnswers = { ...updatedQuizContent[questionIndex]\n    };\n    updatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n    updatedQuizContent[questionIndex] = updatedAnswers;\n    setQuizContent(updatedQuizContent);\n  };\n\n  const handleAddQuestion = () => {\n    setQuizContent(prevQuizContent => [...prevQuizContent, {\n      question: \"\",\n      answers: [\"\", \"\", \"\", \"\"],\n      correct: \"\"\n    }]);\n  };\n\n  const handleDeleteQuestion = questionIndex => {\n    setQuizContent(prevQuizContent => [...prevQuizContent.slice(0, questionIndex), ...prevQuizContent.slice(questionIndex + 1)]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4 quiz style1\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-50\",\n      children: \"Crear Quiz:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 4\n    }, this), quizContent.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20 rounded module-shadow\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row contact-widget module-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-10  rounded pt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ingrese la pregunta o trivia:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 10\n              }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                name: \"question\",\n                className: \"form-control\",\n                value: question.question,\n                onChange: e => handleQuestion(e, questionIndex),\n                placeholder: `Pregunta...`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Escriba las posibles respuestas:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 10\n              }, this), question.answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mb-10\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  name: \"answer\",\n                  type: \"text\",\n                  className: \"form-control\",\n                  value: answer,\n                  onChange: e => handleAnswerChange(questionIndex, answerIndex, e)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 12\n                }, this)\n              }, answerIndex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 11\n              }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Seleccione la respuesta correcta:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 11\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  value: question.answers.indexOf(question.correct),\n                  onChange: e => handleCorrectAnswerChange(e, questionIndex),\n                  children: question.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: index,\n                    children: answer\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 13\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 11\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 10\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 d-flex align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  handleDeleteQuestion(questionIndex);\n                },\n                className: \"btn btn-del-cont \",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 10\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 6\n      }, this)\n    }, questionIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-center contact-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          handleAddQuestion();\n        },\n        className: \"btn  btn-add btn-add-cont me-2 m-10\",\n        children: \"Agregar Pregunta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-center contact-widget\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          console.log(quizContent);\n          alert(quizContent);\n        },\n        className: \"btn  btn-add btn-add-cont me-2 my-20\",\n        children: \"Log Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 3\n  }, this);\n};\n\n_s(Quiz, \"PI6Q6RWDL0Uiwkm3TUaTfUm8YnA=\");\n\n_c = Quiz;\nexport default Quiz;\n/* \n\nconst [modules, setModules] = useState([]);\nconst [formData, setFormData] = useState({ courseName: \"\", description: \"\" });\n\nconst [selectedOption, setSelectedOption] = useState(\"video\");\nconst handleInputChange = (e) => {\n\tconst { name, value } = e.target;\n\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n};\n\nconst handleChangeSelect = (e) => {\n\tsetSelectedOption(e.target.value);\n};\n\nconst handleModuleChange = (index, e) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\tsetModules(updatedModules);\n};\n\nconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\tif (!updatedContents[contentIndex]) {\n\t\tupdatedContents[contentIndex] = {};\n\t}\n\n\tupdatedContents[contentIndex] = {\n\t\t...updatedContents[contentIndex],\n\t\t[name]: value,\n\t};\n\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleAddContent = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\tupdatedContents.push({ name: \"\", description: \"\" });\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteModule = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules.splice(moduleIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleAddModule = () => {\n\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n};\n\nQuiz Functions Start \nconst [quizContent, setQuizContent] = useState([\n\t{\n\t\tquestion: \"\",\n\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\tcorrect: \"\",\n\t},\n]);\n\nconst handleQuestion = (e, index) => {\n\tconst { name, value } = e.target;\n\tconst updatedQuestion = [...quizContent];\n\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\tsetQuizContent(updatedQuestion);\n};\n\nconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\tconst { value } = e.target;\n\tconst updatedQuizContent = [...quizContent];\n\n\tif (!updatedQuizContent[questionIndex].answers) {\n\t\tupdatedQuizContent[questionIndex].answers = [];\n\t}\n\n\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\tupdatedAnswers[answerIndex] = value;\n\n\tupdatedQuizContent[questionIndex] = {\n\t\t...updatedQuizContent[questionIndex],\n\t\tanswers: updatedAnswers,\n\t};\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleCorrectAnswerChange = (event, questionIndex) => {\n\tconst correctAnswerIndex = Number(event.target.value);\n\tconst updatedQuizContent = [...quizContent];\n\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleAddQuestion = () => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent,\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n};\n\nconst handleDeleteQuestion = (questionIndex) => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t...prevQuizContent.slice(questionIndex + 1),\n\t]);\n};\n\nconst handleSubmit = (e) => {\n\te.preventDefault();\n\n\tconst course = {\n\t\tname: formData.courseName,\n\t\tdescription: formData.description,\n\t\tmodules: modules.map((module) => ({\n\t\t\tname: module.name,\n\t\t\tdescription: module.description,\n\t\t\tcontent: module.content.map((content) => ({\n\t\t\t\tname: content.name,\n\t\t\t\tdescription: content.description,\n\t\t\t})),\n\t\t})),\n\t};\n\n\tconsole.log(\"course data \", course);\n\n\tsetModules([\n\t\t{ name: \"\", description: \"\", content: [{ name: \"\", description: \"\" }] },\n\t]);\n\tsetFormData({ courseName: \"\", description: \"\" });\n}; \n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Quiz\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Create/Quiz.js"],"names":["useState","Quiz","props","quizContent","setQuizContent","question","answers","correct","handleQuestion","e","index","name","value","target","updatedQuestion","handleAnswerChange","questionIndex","answerIndex","updatedQuizContent","updatedAnswers","handleCorrectAnswerChange","event","correctAnswerIndex","Number","handleAddQuestion","prevQuizContent","handleDeleteQuestion","slice","questions","map","answer","indexOf","console","log","alert"],"mappings":"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":["import { useState } from \"react\";\n\nconst Quiz = (props) => {\n\tconst {\t} = props;\n\n\n\tconst [quizContent, setQuizContent] = useState([\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n\n\tconst handleQuestion = (e, index) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedQuestion = [...quizContent];\n\t\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\t\tsetQuizContent(updatedQuestion);\n\t};\n\n\tconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\t\tconst { value } = e.target;\n\t\tconst updatedQuizContent = [...quizContent];\n\n\t\tif (!updatedQuizContent[questionIndex].answers) {\n\t\t\tupdatedQuizContent[questionIndex].answers = [];\n\t\t}\n\n\t\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\t\tupdatedAnswers[answerIndex] = value;\n\n\t\tupdatedQuizContent[questionIndex] = {\n\t\t\t...updatedQuizContent[questionIndex],\n\t\t\tanswers: updatedAnswers,\n\t\t};\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleCorrectAnswerChange = (event, questionIndex) => {\n\t\tconst correctAnswerIndex = Number(event.target.value);\n\t\tconst updatedQuizContent = [...quizContent];\n\t\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\t\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\t\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleAddQuestion = () => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent,\n\t\t\t{\n\t\t\t\tquestion: \"\",\n\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\t\tcorrect: \"\",\n\t\t\t},\n\t\t]);\n\t};\n\n\tconst handleDeleteQuestion = (questionIndex) => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t\t...prevQuizContent.slice(questionIndex + 1),\n\t\t]);\n\t};\n\n\n\n\n\treturn (\n\t\t<div className=\"container mt-4 quiz style1\">\n\t\t\t<h5 className=\"mt-50\">Crear Quiz:</h5>\n\n\t\t\t{quizContent.questions.map((question, questionIndex) => (\n\t\t\t\t<div key={questionIndex} className=\"mb-20 rounded module-shadow\">\n\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t<div className=\"row contact-widget module-box\">\n\t\t\t\t\t\t\t<div className=\"col-md-10  rounded pt-3\">\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label>Ingrese la pregunta o trivia:</label>\n\t\t\t\t\t\t\t\t\t<textarea\n\t\t\t\t\t\t\t\t\t\tname=\"question\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\tvalue={question.question}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleQuestion(e, questionIndex)}\n\t\t\t\t\t\t\t\t\t\tplaceholder={`Pregunta...`}\n\t\t\t\t\t\t\t\t\t></textarea>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t<label>Escriba las posibles respuestas:</label>\n\t\t\t\t\t\t\t\t\t{question.answers.map((answer, answerIndex) => (\n\t\t\t\t\t\t\t\t\t\t<div key={answerIndex} className=\"mb-10\">\n\t\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\t\tname=\"answer\"\n\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={answer}\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleAnswerChange(questionIndex, answerIndex, e)}\n\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t))}\n\n\t\t\t\t\t\t\t\t\t<div className=\"form-group\">\n\t\t\t\t\t\t\t\t\t\t<label>Seleccione la respuesta correcta:</label>\n\t\t\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"form-control\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={question.answers.indexOf(question.correct)}\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => handleCorrectAnswerChange(e, questionIndex)}\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t{question.answers.map((answer, index) => (\n\t\t\t\t\t\t\t\t\t\t\t\t<option key={index} value={index}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{answer}\n\t\t\t\t\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className=\"col-md-2 d-flex align-items-center justify-content-center\">\n\t\t\t\t\t\t\t\t<div className=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\thandleDeleteQuestion(questionIndex);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\tclassName=\"btn btn-del-cont \"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-trash\"></i>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t))}\n\n\t\t\t<div className=\"container d-flex justify-content-center contact-widget\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\thandleAddQuestion();\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"btn  btn-add btn-add-cont me-2 m-10\"\n\t\t\t\t>\n\t\t\t\t\tAgregar Pregunta\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t\t<div className=\"container d-flex justify-content-center contact-widget\">\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tconsole.log(quizContent);\n\t\t\t\t\t\talert(quizContent)\n\t\t\t\t\t}}\n\t\t\t\t\tclassName=\"btn  btn-add btn-add-cont me-2 my-20\"\n\t\t\t\t>\n\t\t\t\t\tLog Info\n\t\t\t\t</button>\n\t\t\t</div>\n\n\t\t</div>\n\t);\n};\n\nexport default Quiz;\n\n/* \n\nconst [modules, setModules] = useState([]);\nconst [formData, setFormData] = useState({ courseName: \"\", description: \"\" });\n\nconst [selectedOption, setSelectedOption] = useState(\"video\");\nconst handleInputChange = (e) => {\n\tconst { name, value } = e.target;\n\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n};\n\nconst handleChangeSelect = (e) => {\n\tsetSelectedOption(e.target.value);\n};\n\nconst handleModuleChange = (index, e) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\tsetModules(updatedModules);\n};\n\nconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\tif (!updatedContents[contentIndex]) {\n\t\tupdatedContents[contentIndex] = {};\n\t}\n\n\tupdatedContents[contentIndex] = {\n\t\t...updatedContents[contentIndex],\n\t\t[name]: value,\n\t};\n\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleAddContent = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\tupdatedContents.push({ name: \"\", description: \"\" });\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteModule = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules.splice(moduleIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleAddModule = () => {\n\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n};\n\nQuiz Functions Start \nconst [quizContent, setQuizContent] = useState([\n\t{\n\t\tquestion: \"\",\n\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\tcorrect: \"\",\n\t},\n]);\n\nconst handleQuestion = (e, index) => {\n\tconst { name, value } = e.target;\n\tconst updatedQuestion = [...quizContent];\n\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\tsetQuizContent(updatedQuestion);\n};\n\nconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\tconst { value } = e.target;\n\tconst updatedQuizContent = [...quizContent];\n\n\tif (!updatedQuizContent[questionIndex].answers) {\n\t\tupdatedQuizContent[questionIndex].answers = [];\n\t}\n\n\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\tupdatedAnswers[answerIndex] = value;\n\n\tupdatedQuizContent[questionIndex] = {\n\t\t...updatedQuizContent[questionIndex],\n\t\tanswers: updatedAnswers,\n\t};\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleCorrectAnswerChange = (event, questionIndex) => {\n\tconst correctAnswerIndex = Number(event.target.value);\n\tconst updatedQuizContent = [...quizContent];\n\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleAddQuestion = () => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent,\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n};\n\nconst handleDeleteQuestion = (questionIndex) => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t...prevQuizContent.slice(questionIndex + 1),\n\t]);\n};\n\nconst handleSubmit = (e) => {\n\te.preventDefault();\n\n\tconst course = {\n\t\tname: formData.courseName,\n\t\tdescription: formData.description,\n\t\tmodules: modules.map((module) => ({\n\t\t\tname: module.name,\n\t\t\tdescription: module.description,\n\t\t\tcontent: module.content.map((content) => ({\n\t\t\t\tname: content.name,\n\t\t\t\tdescription: content.description,\n\t\t\t})),\n\t\t})),\n\t};\n\n\tconsole.log(\"course data \", course);\n\n\tsetModules([\n\t\t{ name: \"\", description: \"\", content: [{ name: \"\", description: \"\" }] },\n\t]);\n\tsetFormData({ courseName: \"\", description: \"\" });\n}; \n\n*/"]},"metadata":{},"sourceType":"module"}