{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Create/AddCourseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nconst initialFormData = {\n  courseName: \"\",\n  description: \"\",\n  modules: []\n};\nconst initialModule = {\n  id: \"\",\n  // Unique identifier for the module\n  name: \"\",\n  content: []\n};\nconst initialContent = {\n  id: \"\",\n  // Unique identifier for the content\n  type: \"\",\n  title: \"\",\n  url: \"\",\n  text: \"\",\n  questions: []\n};\nconst initialQuestion = {\n  id: \"\",\n  // Unique identifier for the question\n  question: \"\",\n  answers: [],\n  correctAnswer: \"\"\n};\n\nconst AddCourseForm = () => {\n  _s();\n\n  const [formData, setFormData] = useState(initialFormData);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setFormData({\n      courseName: \"\",\n      description: \"\"\n    });\n  }; ////////////////////////////\n  // SHOW DATA\n  ////////////////////////////\n\n\n  const [showData, setShowData] = useState(true);\n\n  const formatCourseStructure = () => {\n    const object1 = {\n      name: formData.courseName,\n      description: formData.description,\n      modules: formData.modules.map(module => ({\n        name: module.name,\n        description: module.description,\n        content: module.content.map(content => ({\n          name: content.name,\n          description: content.description\n        }))\n      }))\n    };\n    return JSON.stringify(object1, null, 2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"container mt-0 module-box box pb-40\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear Curso:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-large\",\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"courseName\",\n        value: formData.courseName,\n        onChange: handleInputChange,\n        className: \"form-control mb-20\",\n        placeholder: \"Nombre del curso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label mt-2\",\n        children: \"Descripcion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: formData.description,\n        onChange: handleInputChange,\n        className: \"form-control mb-20\",\n        placeholder: \"Describa su curso aqui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-send w-50 pt-50\",\n      children: \"Enviar formulario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-box position-fixed top-0 end-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowData(!showData),\n        children: \"Toggle Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), showData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: formatCourseStructure()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AddCourseForm, \"x0TsHE9WJ2FERVNs/saKr3boiAc=\");\n\n_c = AddCourseForm;\nexport default AddCourseForm;\n/* \n\n\n */\n\n/* \n\n\n\n\nconst course = {\n\t\"First course\": {\n\t\tnombre: \"Fundamentos del Marketing Digital\",\n\t\tdescripción: \"Introducción a los conceptos básicos del marketing digital.\",\n\t\tMódulos: [\n\t\t\t{\n\t\t\t\tnombre: \"Introducción al Marketing Digital\",\n\t\t\t\tContenidos: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"video\",\n\t\t\t\t\t\turl: \"https://link-al-video-introductorio\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"texto\",\n\t\t\t\t\t\ttexto: \"Artículo sobre la historia del marketing digital\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"quiz\",\n\t\t\t\t\t\tpreguntas: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpregunta: \"¿Qué es el marketing digital?\",\n\t\t\t\t\t\t\t\topciones: [\n\t\t\t\t\t\t\t\t\t\"Publicidad en TV\",\n\t\t\t\t\t\t\t\t\t\"Marketing en Internet\",\n\t\t\t\t\t\t\t\t\t\"Radio marketing\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\trespuestaCorrecta: \"Marketing en Internet\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tnombre: \"SEO y SEM\",\n\t\t\t\tContenidos: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"texto\",\n\t\t\t\t\t\ttexto: \"Guía básica de SEO\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"video\",\n\t\t\t\t\t\turl: \"https://link-al-video-SEO\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"quiz\",\n\t\t\t\t\t\tpreguntas: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpregunta: \"¿Cuál es la diferencia principal entre SEO y SEM?\",\n\t\t\t\t\t\t\t\topciones: [\"Costo\", \"Visibilidad\", \"Ambos son iguales\"],\n\t\t\t\t\t\t\t\trespuestaCorrecta: \"Costo\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n};\n\n\n\n\tconst [modules, setModules] = useState([]);\n\tconst [formData, setFormData] = useState({ courseName: \"\", description: \"\", modules: {} });\n\n\tconst [selectedOption, setSelectedOption] = useState(\"video\");\n\t\n\tconst handleChangeSelect = (e) => {\n\t\tsetSelectedOption(e.target.value);\n\t};\n\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n\t};\n\n\tconst handleModuleChange = (index, e) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\n\t\tif (selectedOption !== \"quiz\") {\n\t\t\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\t\t} else {\n\t\t\t// Handle quiz-specific module data if needed\n\t\t}\n\n\t\tsetModules(updatedModules);\n\t};\n\n\n\tconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\t\tif (!updatedContents[contentIndex]) {\n\t\t\tupdatedContents[contentIndex] = {};\n\t\t}\n\n\t\tupdatedContents[contentIndex] = {\n\t\t\t...updatedContents[contentIndex],\n\t\t\t[name]: value,\n\t\t};\n\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddContent = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\t\tupdatedContents.push({ name: \"\", description: \"\" });\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteModule = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules.splice(moduleIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddModule = () => {\n\t\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n\t};\n\n\tconst [quizContent, setQuizContent] = useState([\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n\n\tconst handleQuestion = (e, index) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedQuestion = [...quizContent];\n\t\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\t\tsetQuizContent(updatedQuestion);\n\t};\n\n\tconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\t\tconst { value } = e.target;\n\t\tconst updatedQuizContent = [...quizContent];\n\n\t\tif (!updatedQuizContent[questionIndex].answers) {\n\t\t\tupdatedQuizContent[questionIndex].answers = [];\n\t\t}\n\n\t\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\t\tupdatedAnswers[answerIndex] = value;\n\n\t\tupdatedQuizContent[questionIndex] = {\n\t\t\t...updatedQuizContent[questionIndex],\n\t\t\tanswers: updatedAnswers,\n\t\t};\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleCorrectAnswerChange = (event, questionIndex) => {\n\t\tconst correctAnswerIndex = Number(event.target.value);\n\t\tconst updatedQuizContent = [...quizContent];\n\t\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\t\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\t\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleAddQuestion = () => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent,\n\t\t\t{\n\t\t\t\tquestion: \"\",\n\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\t\tcorrect: \"\",\n\t\t\t},\n\t\t]);\n\t};\n\n\tconst handleDeleteQuestion = (questionIndex) => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t\t...prevQuizContent.slice(questionIndex + 1),\n\t\t]);\n\t};\n\n\n\n\t*/\n\n/*\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\nconst [modules, setModules] = useState([]);\nconst [formData, setFormData] = useState({ courseName: \"\", description: \"\", modules: {} });\n\nconst [selectedOption, setSelectedOption] = useState(\"video\");\n\nconst handleInputChange = (e) => {\n\tconst { name, value } = e.target;\n\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n};\n\nconst handleChangeSelect = (e) => {\n\tsetSelectedOption(e.target.value);\n};\n\nconst handleModuleChange = (index, e) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\n\tif (selectedOption !== \"quiz\") {\n\t\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\t} else {\n\t\t// Handle quiz-specific module data if needed\n\t}\n\n\tsetModules(updatedModules);\n};\n\n\nconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\tif (!updatedContents[contentIndex]) {\n\t\tupdatedContents[contentIndex] = {};\n\t}\n\n\tupdatedContents[contentIndex] = {\n\t\t...updatedContents[contentIndex],\n\t\t[name]: value,\n\t};\n\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleAddContent = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\tupdatedContents.push({ name: \"\", description: \"\" });\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteModule = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules.splice(moduleIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleAddModule = () => {\n\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n};\n\nconst [quizContent, setQuizContent] = useState([\n\t{\n\t\tquestion: \"\",\n\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\tcorrect: \"\",\n\t},\n]);\n\nconst handleQuestion = (e, index) => {\n\tconst { name, value } = e.target;\n\tconst updatedQuestion = [...quizContent];\n\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\tsetQuizContent(updatedQuestion);\n};\n\nconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\tconst { value } = e.target;\n\tconst updatedQuizContent = [...quizContent];\n\n\tif (!updatedQuizContent[questionIndex].answers) {\n\t\tupdatedQuizContent[questionIndex].answers = [];\n\t}\n\n\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\tupdatedAnswers[answerIndex] = value;\n\n\tupdatedQuizContent[questionIndex] = {\n\t\t...updatedQuizContent[questionIndex],\n\t\tanswers: updatedAnswers,\n\t};\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleCorrectAnswerChange = (event, questionIndex) => {\n\tconst correctAnswerIndex = Number(event.target.value);\n\tconst updatedQuizContent = [...quizContent];\n\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleAddQuestion = () => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent,\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n};\n\nconst handleDeleteQuestion = (questionIndex) => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t...prevQuizContent.slice(questionIndex + 1),\n\t]);\n};\n\n\n\nconst handleSubmit = (e) => {\n\te.preventDefault();\n\n};\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCourseForm\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Create/AddCourseForm.js"],"names":["React","useState","initialFormData","courseName","description","modules","initialModule","id","name","content","initialContent","type","title","url","text","questions","initialQuestion","question","answers","correctAnswer","AddCourseForm","formData","setFormData","handleSubmit","e","preventDefault","showData","setShowData","formatCourseStructure","object1","map","module","JSON","stringify","handleInputChange"],"mappings":"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":["import React, { useState } from \"react\";\n\nconst initialFormData = {\n\tcourseName: \"\",\n\tdescription: \"\",\n\tmodules: []\n};\n\nconst initialModule = {\n\tid: \"\", // Unique identifier for the module\n\tname: \"\",\n\tcontent: []\n};\n\nconst initialContent = {\n\tid: \"\", // Unique identifier for the content\n\ttype: \"\",\n\ttitle: \"\",\n\turl: \"\",\n\ttext: \"\",\n\tquestions: []\n};\n\nconst initialQuestion = {\n\tid: \"\", // Unique identifier for the question\n\tquestion: \"\",\n\tanswers: [],\n\tcorrectAnswer: \"\"\n};\n\nconst AddCourseForm = () => {\n\n\tconst [formData, setFormData] = useState(initialFormData);\n\n\n\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tsetFormData({ courseName: \"\", description: \"\" });\n\t};\n\n\n\t////////////////////////////\n\t// SHOW DATA\n\t////////////////////////////\n\tconst [showData, setShowData] = useState(true);\n\tconst formatCourseStructure = () => {\n\t\tconst object1 = {\n\t\t\tname: formData.courseName,\n\t\t\tdescription: formData.description,\n\t\t\tmodules: formData.modules.map((module) => ({\n\t\t\t\tname: module.name,\n\t\t\t\tdescription: module.description,\n\t\t\t\tcontent: module.content.map((content) => ({\n\t\t\t\t\tname: content.name,\n\t\t\t\t\tdescription: content.description,\n\t\t\t\t})),\n\t\t\t})),\n\t\t};\n\n\t\treturn JSON.stringify(object1, null, 2);\n\t};\n\n\treturn (\n\t\t<form onSubmit={handleSubmit} className=\"container mt-0 module-box box pb-40\">\n\t\t\t<h2>Crear Curso:</h2>\n\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<label className=\"form-label text-large\">Nombre:</label>\n\t\t\t\t<input\n\t\t\t\t\ttype=\"text\"\n\t\t\t\t\tname=\"courseName\"\n\t\t\t\t\tvalue={formData.courseName}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tclassName=\"form-control mb-20\"\n\t\t\t\t\tplaceholder=\"Nombre del curso\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\t\t\t<div className=\"mb-3\">\n\t\t\t\t<label className=\"form-label mt-2\">Descripcion:</label>\n\t\t\t\t<textarea\n\t\t\t\t\tname=\"description\"\n\t\t\t\t\tvalue={formData.description}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tclassName=\"form-control mb-20\"\n\t\t\t\t\tplaceholder=\"Describa su curso aqui\"\n\t\t\t\t/>\n\t\t\t</div>\n\n\n\n\t\t\t<button type=\"submit\" className=\"btn btn-send w-50 pt-50\">\n\t\t\t\tEnviar formulario\n\t\t\t</button>\n\n\t\t\t<div className=\"data-box position-fixed top-0 end-0\">\n\t\t\t\t<button onClick={() => setShowData(!showData)}>Toggle Data</button>\n\t\t\t\t{showData && (\n\t\t\t\t\t<div className=\"data\">\n\t\t\t\t\t\t<pre>{formatCourseStructure()}</pre>\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\n\n\t\t</form>\n\n\t);\n};\n\nexport default AddCourseForm;\n\n\n\n\n/* \n\n\n */\n\n\n/* \n\n\n\n\nconst course = {\n\t\"First course\": {\n\t\tnombre: \"Fundamentos del Marketing Digital\",\n\t\tdescripción: \"Introducción a los conceptos básicos del marketing digital.\",\n\t\tMódulos: [\n\t\t\t{\n\t\t\t\tnombre: \"Introducción al Marketing Digital\",\n\t\t\t\tContenidos: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"video\",\n\t\t\t\t\t\turl: \"https://link-al-video-introductorio\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"texto\",\n\t\t\t\t\t\ttexto: \"Artículo sobre la historia del marketing digital\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"quiz\",\n\t\t\t\t\t\tpreguntas: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpregunta: \"¿Qué es el marketing digital?\",\n\t\t\t\t\t\t\t\topciones: [\n\t\t\t\t\t\t\t\t\t\"Publicidad en TV\",\n\t\t\t\t\t\t\t\t\t\"Marketing en Internet\",\n\t\t\t\t\t\t\t\t\t\"Radio marketing\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\trespuestaCorrecta: \"Marketing en Internet\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tnombre: \"SEO y SEM\",\n\t\t\t\tContenidos: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"texto\",\n\t\t\t\t\t\ttexto: \"Guía básica de SEO\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"video\",\n\t\t\t\t\t\turl: \"https://link-al-video-SEO\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"quiz\",\n\t\t\t\t\t\tpreguntas: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpregunta: \"¿Cuál es la diferencia principal entre SEO y SEM?\",\n\t\t\t\t\t\t\t\topciones: [\"Costo\", \"Visibilidad\", \"Ambos son iguales\"],\n\t\t\t\t\t\t\t\trespuestaCorrecta: \"Costo\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n};\n\n\n\n\tconst [modules, setModules] = useState([]);\n\tconst [formData, setFormData] = useState({ courseName: \"\", description: \"\", modules: {} });\n\n\tconst [selectedOption, setSelectedOption] = useState(\"video\");\n\t\n\tconst handleChangeSelect = (e) => {\n\t\tsetSelectedOption(e.target.value);\n\t};\n\n\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n\t};\n\n\tconst handleModuleChange = (index, e) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\n\t\tif (selectedOption !== \"quiz\") {\n\t\t\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\t\t} else {\n\t\t\t// Handle quiz-specific module data if needed\n\t\t}\n\n\t\tsetModules(updatedModules);\n\t};\n\n\n\tconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\t\tif (!updatedContents[contentIndex]) {\n\t\t\tupdatedContents[contentIndex] = {};\n\t\t}\n\n\t\tupdatedContents[contentIndex] = {\n\t\t\t...updatedContents[contentIndex],\n\t\t\t[name]: value,\n\t\t};\n\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddContent = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\t\tupdatedContents.push({ name: \"\", description: \"\" });\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteModule = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules.splice(moduleIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddModule = () => {\n\t\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n\t};\n\n\tconst [quizContent, setQuizContent] = useState([\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n\n\tconst handleQuestion = (e, index) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedQuestion = [...quizContent];\n\t\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\t\tsetQuizContent(updatedQuestion);\n\t};\n\n\tconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\t\tconst { value } = e.target;\n\t\tconst updatedQuizContent = [...quizContent];\n\n\t\tif (!updatedQuizContent[questionIndex].answers) {\n\t\t\tupdatedQuizContent[questionIndex].answers = [];\n\t\t}\n\n\t\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\t\tupdatedAnswers[answerIndex] = value;\n\n\t\tupdatedQuizContent[questionIndex] = {\n\t\t\t...updatedQuizContent[questionIndex],\n\t\t\tanswers: updatedAnswers,\n\t\t};\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleCorrectAnswerChange = (event, questionIndex) => {\n\t\tconst correctAnswerIndex = Number(event.target.value);\n\t\tconst updatedQuizContent = [...quizContent];\n\t\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\t\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\t\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleAddQuestion = () => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent,\n\t\t\t{\n\t\t\t\tquestion: \"\",\n\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\t\tcorrect: \"\",\n\t\t\t},\n\t\t]);\n\t};\n\n\tconst handleDeleteQuestion = (questionIndex) => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t\t...prevQuizContent.slice(questionIndex + 1),\n\t\t]);\n\t};\n\n\n\n\t*/\n\n\n\n\n\n\n\n\n\n\n\n/*\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\nconst [modules, setModules] = useState([]);\nconst [formData, setFormData] = useState({ courseName: \"\", description: \"\", modules: {} });\n\nconst [selectedOption, setSelectedOption] = useState(\"video\");\n\nconst handleInputChange = (e) => {\n\tconst { name, value } = e.target;\n\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n};\n\nconst handleChangeSelect = (e) => {\n\tsetSelectedOption(e.target.value);\n};\n\nconst handleModuleChange = (index, e) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\n\tif (selectedOption !== \"quiz\") {\n\t\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\t} else {\n\t\t// Handle quiz-specific module data if needed\n\t}\n\n\tsetModules(updatedModules);\n};\n\n\nconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\tconst { name, value } = e.target;\n\tconst updatedModules = [...modules];\n\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\tif (!updatedContents[contentIndex]) {\n\t\tupdatedContents[contentIndex] = {};\n\t}\n\n\tupdatedContents[contentIndex] = {\n\t\t...updatedContents[contentIndex],\n\t\t[name]: value,\n\t};\n\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleAddContent = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\tupdatedContents.push({ name: \"\", description: \"\" });\n\tupdatedModules[moduleIndex] = {\n\t\t...updatedModules[moduleIndex],\n\t\tcontent: updatedContents,\n\t};\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleDeleteModule = (moduleIndex) => {\n\tconst updatedModules = [...modules];\n\tupdatedModules.splice(moduleIndex, 1);\n\tsetModules(updatedModules);\n};\n\nconst handleAddModule = () => {\n\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n};\n\nconst [quizContent, setQuizContent] = useState([\n\t{\n\t\tquestion: \"\",\n\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\tcorrect: \"\",\n\t},\n]);\n\nconst handleQuestion = (e, index) => {\n\tconst { name, value } = e.target;\n\tconst updatedQuestion = [...quizContent];\n\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\tsetQuizContent(updatedQuestion);\n};\n\nconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\tconst { value } = e.target;\n\tconst updatedQuizContent = [...quizContent];\n\n\tif (!updatedQuizContent[questionIndex].answers) {\n\t\tupdatedQuizContent[questionIndex].answers = [];\n\t}\n\n\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\tupdatedAnswers[answerIndex] = value;\n\n\tupdatedQuizContent[questionIndex] = {\n\t\t...updatedQuizContent[questionIndex],\n\t\tanswers: updatedAnswers,\n\t};\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleCorrectAnswerChange = (event, questionIndex) => {\n\tconst correctAnswerIndex = Number(event.target.value);\n\tconst updatedQuizContent = [...quizContent];\n\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\tsetQuizContent(updatedQuizContent);\n};\n\nconst handleAddQuestion = () => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent,\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n};\n\nconst handleDeleteQuestion = (questionIndex) => {\n\tsetQuizContent((prevQuizContent) => [\n\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t...prevQuizContent.slice(questionIndex + 1),\n\t]);\n};\n\n\n\nconst handleSubmit = (e) => {\n\te.preventDefault();\n\n};\n\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n*/"]},"metadata":{},"sourceType":"module"}