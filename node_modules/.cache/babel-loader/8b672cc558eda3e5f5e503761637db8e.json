{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/course-flow/CourseFlow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ListGroup, ListGroupItem, Collapse, Container, Row, Col, Button } from 'react-bootstrap';\n\nconst CourseFlow = () => {\n  _s();\n\n  // State variables\n  const [isMenuOpen, setIsMenuOpen] = useState(true); // Initially menu is open\n\n  const [selectedContent, setSelectedContent] = useState(null);\n  const [isMainContentExpanded, setIsMainContentExpanded] = useState(true); // Initially main content is expanded\n  // Content click handler\n\n  const handleContentClick = index => {\n    setSelectedContent(index);\n  }; // Button click handler\n\n\n  const handleButtonClick = () => {\n    setIsMenuOpen(!isMenuOpen);\n    setIsMainContentExpanded(!isMainContentExpanded);\n  };\n\n  const courseData = [{\n    title: 'Lecture 1',\n    content: 'Content for Lecture 1...'\n  }, {\n    title: 'Lecture 2',\n    content: 'Content for Lecture 2...'\n  } // ... more lectures\n  ];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        className: `${isMenuOpen ? 'col-md-9' : 'col-md-12'}`,\n        children: isMainContentExpanded && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedContent !== null ? courseData[selectedContent].title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedContent !== null ? courseData[selectedContent].content : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        className: `${isMenuOpen ? 'show' : ''} col-md-3`,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          onClick: handleButtonClick,\n          children: isMenuOpen ? 'Hide Menu' : 'Show Menu'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isMenuOpen,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: courseData.map((lecture, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              action: true,\n              onClick: () => {\n                handleContentClick(index); // Close menu by updating state in onClick handler\n\n                setIsMenuOpen(false);\n              },\n              children: lecture.title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CourseFlow, \"k28KMnj5TRe5kDCeJ6mEFQrU46Y=\");\n\n_c = CourseFlow;\nexport default CourseFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseFlow\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/course-flow/CourseFlow.js"],"names":["React","useState","ListGroup","ListGroupItem","Collapse","Container","Row","Col","Button","CourseFlow","isMenuOpen","setIsMenuOpen","selectedContent","setSelectedContent","isMainContentExpanded","setIsMainContentExpanded","handleContentClick","index","handleButtonClick","courseData","title","content","map","lecture"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  ListGroup,\n  ListGroupItem,\n  Collapse,\n  Container,\n  Row,\n  Col,\n  Button,\n} from 'react-bootstrap';\n\nconst CourseFlow = () => {\n  // State variables\n  const [isMenuOpen, setIsMenuOpen] = useState(true); // Initially menu is open\n  const [selectedContent, setSelectedContent] = useState(null);\n  const [isMainContentExpanded, setIsMainContentExpanded] = useState(true); // Initially main content is expanded\n\n  // Content click handler\n  const handleContentClick = (index) => {\n    setSelectedContent(index);\n  };\n\n  // Button click handler\n  const handleButtonClick = () => {\n    setIsMenuOpen(!isMenuOpen);\n    setIsMainContentExpanded(!isMainContentExpanded);\n  };\n\n  const courseData = [\n    { title: 'Lecture 1', content: 'Content for Lecture 1...' },\n    { title: 'Lecture 2', content: 'Content for Lecture 2...' },\n    // ... more lectures\n  ];\n\n  return (\n    <Container fluid>\n      <Row>\n        {/* Main content column */}\n        <Col md={8} className={`${isMenuOpen ? 'col-md-9' : 'col-md-12'}`}>\n          {/* Conditionally render content only if expanded */}\n          {isMainContentExpanded && (\n            <div>\n              {/* Content goes here */}\n              <h2>{selectedContent !== null ? courseData[selectedContent].title : ''}</h2>\n              <p>{selectedContent !== null ? courseData[selectedContent].content : ''}</p>\n            </div>\n          )}\n        </Col>\n\n        {/* Menu column */}\n        <Col md={4} className={`${isMenuOpen ? 'show' : ''} col-md-3`}>\n          <Button variant=\"dark\" onClick={handleButtonClick}>\n            {isMenuOpen ? 'Hide Menu' : 'Show Menu'}\n          </Button>\n          <Collapse in={isMenuOpen}>\n            <ListGroup>\n              {courseData.map((lecture, index) => (\n                <ListGroupItem\n                  key={index}\n                  action\n                  onClick={() => {\n                    handleContentClick(index);\n                    // Close menu by updating state in onClick handler\n                    setIsMenuOpen(false);\n                  }}\n                >\n                  {lecture.title}\n                </ListGroupItem>\n              ))}\n            </ListGroup>\n          </Collapse>\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default CourseFlow;\n"]},"metadata":{},"sourceType":"module"}