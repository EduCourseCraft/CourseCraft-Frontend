{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/QuizContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst QuizContent = ({\n  content: quizData\n}) => {\n  _s();\n\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(quizData.questions.length).fill(null));\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleOptionSelect = (questionIndex, answerIndex) => {\n    if (!isSubmitted) {\n      const newAnswers = [...selectedAnswers];\n      newAnswers[questionIndex] = answerIndex === newAnswers[questionIndex] ? null : answerIndex;\n      setSelectedAnswers(newAnswers);\n    }\n  };\n\n  const isAnyOptionSelected = selectedAnswers.some(answerIndex => answerIndex !== null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quiz-content\",\n    children: [quizData.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container mt-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"mb-0 pb-1 pt-3\",\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: question.answers.map((answer, answerIndex) => {\n          const isCorrect = isSubmitted && selectedAnswers[questionIndex] === answerIndex && quizData.questions[questionIndex].correctAnswer === answer;\n          const isSelected = selectedAnswers[questionIndex] === answerIndex;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `option ${isSelected ? 'selected' : ''} ${isCorrect ? 'correct' : ''} ${isSubmitted && isSelected && !isCorrect ? 'incorrect' : ''}`,\n            onClick: () => handleOptionSelect(questionIndex, answerIndex),\n            style: {\n              backgroundColor: isSelected ? '#86c0fe' : 'initial'\n            },\n            children: answer\n          }, answerIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      disabled: !isAnyOptionSelected || isSubmitted,\n      children: \"Checkear respuestas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuizContent, \"LYif+jBgqprIxy26D6QV4uhIppQ=\");\n\n_c = QuizContent;\nexport default QuizContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizContent\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/QuizContent.js"],"names":["React","useState","Button","QuizContent","content","quizData","selectedAnswers","setSelectedAnswers","Array","questions","length","fill","isSubmitted","setIsSubmitted","handleOptionSelect","questionIndex","answerIndex","newAnswers","isAnyOptionSelected","some","map","question","answers","answer","isCorrect","correctAnswer","isSelected","backgroundColor","handleSubmit"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAEC;AAAX,CAAD,KAA2B;AAAA;;AAC9C,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAAC,IAAIO,KAAJ,CAAUH,QAAQ,CAACI,SAAT,CAAmBC,MAA7B,EAAqCC,IAArC,CAA0C,IAA1C,CAAD,CAAtD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMa,kBAAkB,GAAG,CAACC,aAAD,EAAgBC,WAAhB,KAAgC;AAC1D,QAAI,CAACJ,WAAL,EAAkB;AACjB,YAAMK,UAAU,GAAG,CAAC,GAAGX,eAAJ,CAAnB;AACAW,MAAAA,UAAU,CAACF,aAAD,CAAV,GAA4BC,WAAW,KAAKC,UAAU,CAACF,aAAD,CAA1B,GAA4C,IAA5C,GAAmDC,WAA/E;AACAT,MAAAA,kBAAkB,CAACU,UAAD,CAAlB;AACA;AACD,GAND;;AASA,QAAMC,mBAAmB,GAAGZ,eAAe,CAACa,IAAhB,CAAqBH,WAAW,IAAIA,WAAW,KAAK,IAApD,CAA5B;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,eAEEX,QAAQ,CAACI,SAAT,CAAmBW,GAAnB,CAAuB,CAACC,QAAD,EAAWN,aAAX,kBACvB;AAAyB,MAAA,SAAS,EAAC,yBAAnC;AAAA,8BACC;AAAI,QAAA,SAAS,EAAC,gBAAd;AAAA,kBAAgCM,QAAQ,CAACA;AAAzC;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACEA,QAAQ,CAACC,OAAT,CAAiBF,GAAjB,CAAqB,CAACG,MAAD,EAASP,WAAT,KAAyB;AAC9C,gBAAMQ,SAAS,GAAGZ,WAAW,IAAIN,eAAe,CAACS,aAAD,CAAf,KAAmCC,WAAlD,IAAiEX,QAAQ,CAACI,SAAT,CAAmBM,aAAnB,EAAkCU,aAAlC,KAAoDF,MAAvI;AACA,gBAAMG,UAAU,GAAGpB,eAAe,CAACS,aAAD,CAAf,KAAmCC,WAAtD;AACA,8BACC;AAEC,YAAA,SAAS,EAAG,UAASU,UAAU,GAAG,UAAH,GAAgB,EAAG,IAAGF,SAAS,GAAG,SAAH,GAAe,EAAG,IAAGZ,WAAW,IAAIc,UAAf,IAA6B,CAACF,SAA9B,GAA0C,WAA1C,GAAwD,EAAG,EAF/I;AAGC,YAAA,OAAO,EAAE,MAAMV,kBAAkB,CAACC,aAAD,EAAgBC,WAAhB,CAHlC;AAIC,YAAA,KAAK,EAAE;AAAEW,cAAAA,eAAe,EAAED,UAAU,GAAG,SAAH,GAAe;AAA5C,aAJR;AAAA,sBAMEH;AANF,aACMP,WADN;AAAA;AAAA;AAAA;AAAA,kBADD;AAUA,SAbA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA,OAAUD,aAAV;AAAA;AAAA;AAAA;AAAA,YADA,CAFF,eAwBC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEa,YAAjB;AAA+B,MAAA,QAAQ,EAAE,CAACV,mBAAD,IAAwBN,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAxBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AA4BA,CA3CD;;GAAMT,W;;KAAAA,W;AA6CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst QuizContent = ({ content: quizData }) => {\n const [selectedAnswers, setSelectedAnswers] = useState(new Array(quizData.questions.length).fill(null));\n const [isSubmitted, setIsSubmitted] = useState(false);\n\n const handleOptionSelect = (questionIndex, answerIndex) => {\n  if (!isSubmitted) {\n   const newAnswers = [...selectedAnswers];\n   newAnswers[questionIndex] = answerIndex === newAnswers[questionIndex] ? null : answerIndex;\n   setSelectedAnswers(newAnswers);\n  }\n };\n\n\n const isAnyOptionSelected = selectedAnswers.some(answerIndex => answerIndex !== null);\n\n return (\n  <div className=\"quiz-content\">\n   {/* Render quiz questions and options */}\n   {quizData.questions.map((question, questionIndex) => (\n    <div key={questionIndex} className=\"question-container mt-1\">\n     <h5 className='mb-0 pb-1 pt-3'>{question.question}</h5>\n     <div className=\"options-container\">\n      {question.answers.map((answer, answerIndex) => {\n       const isCorrect = isSubmitted && selectedAnswers[questionIndex] === answerIndex && quizData.questions[questionIndex].correctAnswer === answer;\n       const isSelected = selectedAnswers[questionIndex] === answerIndex;\n       return (\n        <div\n         key={answerIndex}\n         className={`option ${isSelected ? 'selected' : ''} ${isCorrect ? 'correct' : ''} ${isSubmitted && isSelected && !isCorrect ? 'incorrect' : ''}`}\n         onClick={() => handleOptionSelect(questionIndex, answerIndex)}\n         style={{ backgroundColor: isSelected ? '#86c0fe' : 'initial' }}\n        >\n         {answer}\n        </div>\n       );\n      })}\n     </div>\n    </div>\n   ))}\n   {/* Submit button */}\n   <Button onClick={handleSubmit} disabled={!isAnyOptionSelected || isSubmitted}>Checkear respuestas</Button>\n  </div>\n );\n};\n\nexport default QuizContent;\n"]},"metadata":{},"sourceType":"module"}