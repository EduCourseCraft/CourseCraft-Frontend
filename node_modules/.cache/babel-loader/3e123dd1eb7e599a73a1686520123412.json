{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\"; // Course courseImg\n\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n  _s();\n\n  const fetchData = [{\n    id: 1755,\n    name: \"Investment Strategies\",\n    detail: \"Explore various investment strategies and techniques.\",\n    duration: 12,\n    category: [\"Web development\"]\n  }, {\n    id: 5092,\n    name: \"Budgeting Essentials\",\n    detail: \"Master the art of budgeting for personal and business finances.\",\n    duration: 6,\n    category: [\"Finances\", \"Crypto\"]\n  }, {\n    id: 6176,\n    name: \"Accounting Principles\",\n    detail: \"Understand the fundamental principles of accounting.\",\n    duration: 10,\n    category: [\"Finances\", \"Trading\", \"Crypto\"]\n  }, {\n    id: 12346,\n    name: \"Cryptocurrency Trading\",\n    detail: \"Learn about trading cryptocurrencies like Bitcoin and Ethereum.\",\n    duration: 9,\n    category: [\"Trading\"]\n  }, {\n    id: 12349,\n    name: \"Risk Management in Trading\",\n    detail: \"Master the art of risk management in trading.\",\n    duration: 7,\n    category: [\"Trading\"]\n  }]; ////////////////////////////\n  // RENDER CATEGORIES TABS\n  ////////////////////////////\n\n  const [fetchedCategories, setFetchedCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(undefined);\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        var _filtered$;\n\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`);\n        const data = await response.json();\n        const filtered = data.filter(category => category.active === true);\n        setFetchedCategories(filtered);\n        setActiveCategory((_filtered$ = filtered[0]) === null || _filtered$ === void 0 ? void 0 : _filtered$.name); // Set initial active category to the first category name if available\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const renderCoursePanel = selectedCategory => {\n    const filteredCourses = fetchData.filter(course => selectedCategory === \"All courses\" ? true // Render all courses when \"All courses\" tab is selected\n    : course.category.includes(selectedCategory));\n    console.log(\"courses \", filteredCourses);\n    const offset = currentPage * coursesPerPage;\n    const currentPageCourses = filteredCourses.slice(offset, offset + coursesPerPage);\n    console.log(\"current \", currentPageCourses);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentPageCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4 col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(CourseSingleTwo, {\n          courseClass: \"courses-item md-mb-30\",\n          courseImg: courseImg1,\n          courseTitle: course.name || \"Curso en desarrollo\",\n          courseDuration: course.duration || \"10\",\n          courseId: course.id || \"12312312\",\n          courseCategory: course.category.join(\", \") || \"En desarrollo\" // Join categories if there are multiple\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }, this);\n  };\n\n  const handleTabClick = category => {\n    setActiveCategory(category);\n    setCurrentPage(0); // Reset page when switching categories\n  };\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\"\n    });\n    setCurrentPage(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rs-popular-course\",\n    className: \"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          className: \"gridFilter text-center mb-10 md-mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabClick(\"All\"),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"All courses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 8\n            }, this)\n          }, \"All\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 7\n          }, this), fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabClick(category.name),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 9\n            }, this)\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 6\n        }, this), fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 9\n            }, this), renderCoursePanel(category.name), \" \", /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              className: \"pagination\",\n              previousLabel: \"Previous\",\n              nextLabel: \"Next\",\n              breakLabel: \"...\",\n              pageCount: Math.ceil((activeCategory ? fetchData.filter(course => course.category.includes(activeCategory)) : fetchData).length / coursesPerPage),\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 5,\n              onPageChange: handlePageChange,\n              containerClassName: \"pagination\",\n              activeClassName: \"active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 8\n          }, this)]\n        }, category.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CoursePart, \"0t94NKgLKsr97eW26AA5imEpYS4=\");\n\n_c = CoursePart;\nexport default CoursePart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePart\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js"],"names":["React","useEffect","useState","Tab","Tabs","TabList","TabPanel","CourseSingleTwo","ReactPaginate","courseImg1","CoursePart","fetchData","id","name","detail","duration","category","fetchedCategories","setFetchedCategories","activeCategory","setActiveCategory","undefined","currentPage","setCurrentPage","coursesPerPage","fetchCategories","response","fetch","process","env","REACT_APP_ROOT_URL","REACT_APP_CATEGORIES_GET_ALL","data","json","filtered","filter","active","error","console","renderCoursePanel","selectedCategory","filteredCourses","course","includes","log","offset","currentPageCourses","slice","map","join","handleTabClick","handlePageChange","selected","window","scrollTo","top","behavior","Math","ceil","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\";\n\n// Course courseImg\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n const fetchData = [\n  {\n   id: 1755,\n   name: \"Investment Strategies\",\n   detail: \"Explore various investment strategies and techniques.\",\n   duration: 12,\n   category: [\"Web development\"],\n  },\n  {\n   id: 5092,\n   name: \"Budgeting Essentials\",\n   detail: \"Master the art of budgeting for personal and business finances.\",\n   duration: 6,\n   category: [\"Finances\", \"Crypto\"],\n  },\n  {\n   id: 6176,\n   name: \"Accounting Principles\",\n   detail: \"Understand the fundamental principles of accounting.\",\n   duration: 10,\n   category: [\"Finances\", \"Trading\", \"Crypto\"],\n  },\n  {\n   id: 12346,\n   name: \"Cryptocurrency Trading\",\n   detail: \"Learn about trading cryptocurrencies like Bitcoin and Ethereum.\",\n   duration: 9,\n   category: [\"Trading\"],\n  },\n  {\n   id: 12349,\n   name: \"Risk Management in Trading\",\n   detail: \"Master the art of risk management in trading.\",\n   duration: 7,\n   category: [\"Trading\"],\n  },\n ];\n\n ////////////////////////////\n // RENDER CATEGORIES TABS\n ////////////////////////////\n const [fetchedCategories, setFetchedCategories] = useState([]);\n const [activeCategory, setActiveCategory] = useState(undefined);\n const [currentPage, setCurrentPage] = useState(0);\n const coursesPerPage = 9;\n\n useEffect(() => {\n  const fetchCategories = async () => {\n   try {\n    const response = await fetch(\n     `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`\n    );\n    const data = await response.json();\n    const filtered = data.filter((category) => category.active === true);\n    setFetchedCategories(filtered);\n    setActiveCategory(filtered[0]?.name); // Set initial active category to the first category name if available\n   } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n   }\n  };\n\n  fetchCategories();\n }, []);\n\n const renderCoursePanel = (selectedCategory) => {\n  const filteredCourses = fetchData.filter((course) =>\n    selectedCategory === \"All courses\"\n      ? true // Render all courses when \"All courses\" tab is selected\n      : course.category.includes(selectedCategory)\n  );\n\n  console.log(\"courses \", filteredCourses);\n\n  const offset = currentPage * coursesPerPage;\n  const currentPageCourses = filteredCourses.slice(\n    offset,\n    offset + coursesPerPage\n  );\n\n  console.log(\"current \", currentPageCourses);\n\n  return (\n    <div className=\"row\">\n      {currentPageCourses.map((course) => (\n        <div key={course.id} className=\"col-lg-4 col-md-6\">\n          <CourseSingleTwo\n            courseClass=\"courses-item md-mb-30\"\n            courseImg={courseImg1}\n            courseTitle={course.name || \"Curso en desarrollo\"}\n            courseDuration={course.duration || \"10\"}\n            courseId={course.id || \"12312312\"}\n            courseCategory={course.category.join(\", \") || \"En desarrollo\"} // Join categories if there are multiple\n          />\n        </div>\n      ))}\n    </div>\n  );\n};\n\n const handleTabClick = (category) => {\n  setActiveCategory(category);\n  setCurrentPage(0); // Reset page when switching categories\n };\n\n const handlePageChange = ({ selected }) => {\n  window.scrollTo({\n   top: 250,\n   behavior: \"smooth\",\n  });\n  setCurrentPage(selected);\n };\n\n return (\n  <div\n   id=\"rs-popular-course\"\n   className=\"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\"\n  >\n   <div className=\"container\">\n    <Tabs>\n     <TabList className=\"gridFilter text-center mb-10 md-mb-10\">\n      <Tab key=\"All\" onClick={() => handleTabClick(\"All\")}>\n       <button>All courses</button>\n      </Tab>\n      {fetchedCategories.map((category) => (\n       <Tab key={category.id} onClick={() => handleTabClick(category.name)}>\n        <button>{category.name}</button>\n       </Tab>\n      ))}\n     </TabList>\n\n     {fetchedCategories.map((category) => (\n      <TabPanel key={category.id}> {/* Ensure each TabPanel has a unique key */}\n       {/* Content for each TabPanel */}\n       <div>\n        <h2>{category.name}</h2>\n        {renderCoursePanel(category.name)} {/* Pass category name to renderCoursePanel */}\n        <ReactPaginate\n         className=\"pagination\"\n         previousLabel={\"Previous\"}\n         nextLabel={\"Next\"}\n         breakLabel={\"...\"}\n         pageCount={Math.ceil(\n          (activeCategory\n           ? fetchData.filter((course) =>\n            course.category.includes(activeCategory)\n           )\n           : fetchData\n          ).length / coursesPerPage\n         )}\n         marginPagesDisplayed={2}\n         pageRangeDisplayed={5}\n         onPageChange={handlePageChange}\n         containerClassName={\"pagination\"}\n         activeClassName={\"active\"}\n        />\n       </div>\n      </TabPanel>\n     ))}\n    </Tabs>\n   </div>\n  </div>\n );\n};\n\nexport default CoursePart;\n"]},"metadata":{},"sourceType":"module"}