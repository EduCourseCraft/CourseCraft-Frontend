{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Create/AddCourseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Quiz from \"./Quiz\";\nimport useCourseStore from \"../../store/store\";\n\nconst AddCourseForm = () => {\n  _s();\n\n  // const [modules, setModules] = useState([\n  // \t{\n  // \t\tname: \"\",\n  // \t\tcontent: [\n  // \t\t\t{ type: \"video\", name: \"\", url: \"\" },\n  // \t\t\t{ type: \"text\", title: \"\", text: \"\" },\n  // \t\t\t{\n  // \t\t\t\ttype: \"quiz\", question: [{\n  // \t\t\t\t\tquestion: \"\",\n  // \t\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n  // \t\t\t\t\tcorrectAnswer: \"\",\n  // \t\t\t\t}]\n  // \t\t\t}\n  // \t\t],\n  // \t},\n  // ]);\n  const {\n    setCourse,\n    course,\n    handleQuestion,\n    handleAnswerChange,\n    handleCorrectAnswerChange,\n    handleAddQuestion,\n    handleDeleteQuestion,\n    handleChangeSelect,\n    handleAddModule,\n    handleModuleChange,\n    handleContentChange,\n    // handleInputChange,\n    handleDeleteModule,\n    selectedOption,\n    handleAddContent,\n    handleDeleteContent\n  } = useCourseStore(); // const [modules, setModules] = useState([]);\n  // const [formData, setFormData] = useState({\n  // \tcourseName: \"\",\n  // \tdescription: \"\",\n  // \tmodules: {},\n  // });\n  // const [quizContent, setQuizContent] = useState([\n  // \t{\n  // \t\tquestion: \"\",\n  // \t\tanswers: [\"\", \"\", \"\", \"\"],\n  // \t\tcorrectAnswer: \"\",\n  // \t},\n  // ]);\n  // const [selectedOption, setSelectedOption] = useState(\"video\");\n\n  /* \n  handleAddModule\n  handleDeleteModule\n  handleInputChange\n  handleModuleChange\n  \n  handleChangeSelect\n  handleDeleteContent\n  handleContentChange\n  handleAddContent\n  handleQuestion\n  handleAnswerChange\n  handleCorrectAnswerChange\n  handleAddQuestion\n  handleDeleteQuestion\n  \t\t*/\n  ///////////////////////////////////\n  // FUNCTIONS WORKING\n  ///////////////////////////////////\n  // const handleChangeSelect = (e, moduleIndex) => {\n  // \tsetSelectedOption(e.target.value);\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map((module, idx) => {\n  // \t\t\tif (idx === moduleIndex) {\n  // \t\t\t\tconst updatedContents = module.content.map(content => {\n  // \t\t\t\t\tif (content.type === e.target.value) {\n  // \t\t\t\t\t\tif (e.target.value === \"video\") {\n  // \t\t\t\t\t\t\treturn { type: \"video\", url: \"\" };\n  // \t\t\t\t\t\t} else if (e.target.value === \"text\") {\n  // \t\t\t\t\t\t\treturn { type: \"text\", text: \"\" };\n  // \t\t\t\t\t\t} else if (e.target.value === \"quiz\") {\n  // \t\t\t\t\t\t\tconst quizData = {\n  // \t\t\t\t\t\t\t\tquestion: \"\",\n  // \t\t\t\t\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n  // \t\t\t\t\t\t\t\tcorrectAnswer: \"\",\n  // \t\t\t\t\t\t\t};\n  // \t\t\t\t\t\t\treturn { type: \"quiz\", question: [quizData] };\n  // \t\t\t\t\t\t}\n  // \t\t\t\t\t}\n  // \t\t\t\t\treturn content;\n  // \t\t\t\t});\n  // \t\t\t\treturn {\n  // \t\t\t\t\t...module,\n  // \t\t\t\t\tcontent: updatedContents,\n  // \t\t\t\t};\n  // \t\t\t}\n  // \t\t\treturn module;\n  // \t\t});\n  // \t});\n  // };\n\n  const handleInputChange = (fieldName, fieldValue) => {\n    setCourse(state => ({\n      course: { ...state.course,\n        [fieldName]: fieldValue\n      }\n    }));\n  }; // const handleInputChange = (e) => {\n  // \tconst { name, value } = e.target;\n  // \tsetFormData(prevData => ({ ...prevData, [name]: value }));\n  // };\n  // const handleDeleteContent = (moduleIndex, contentIndex) => {\n  // \tsetModules(prevModules => {\n  // \t\tconst updatedModules = [...prevModules];\n  // \t\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n  // \t\treturn updatedModules;\n  // \t});\n  // };\n  // const handleDeleteModule = (moduleIndex) => {\n  // \tsetModules(prevModules => {\n  // \t\tconst updatedModules = [...prevModules];\n  // \t\tupdatedModules.splice(moduleIndex, 1);\n  // \t\treturn updatedModules;\n  // \t});\n  // };\n  // const handleAddModule = () => {\n  // \tsetModules(prevModules => [...prevModules, { name: \"\", content: [] }]);\n  // };\n  // const handleModuleChange = (index, e) => {\n  // \tconst { name, value } = e.target;\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map((module, idx) => {\n  // \t\t\tif (idx === index) {\n  // \t\t\t\treturn { ...module, [name]: value };\n  // \t\t\t}\n  // \t\t\treturn module;\n  // \t\t});\n  // \t});\n  // };\n  ///////////////////////////////////////////////\n  ////////////////////////////////////////////////\n  // const handleContentChange = (e, moduleIndex, contentIndex) => {\n  // \tconst { name, value } = e.target;\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map((module, idx) => {\n  // \t\t\tif (idx === moduleIndex) {\n  // \t\t\t\tconst updatedContents = module.content.map((content, cIdx) => {\n  // \t\t\t\t\tif (cIdx === contentIndex) {\n  // \t\t\t\t\t\tif (content.type === \"video\" && (name === \"name\" || name === \"url\")) {\n  // \t\t\t\t\t\t\treturn { ...content, [name]: value };\n  // \t\t\t\t\t\t} else if (content.type === \"text\" && (name === \"title\" || name === \"text\")) {\n  // \t\t\t\t\t\t\treturn { ...content, [name]: value };\n  // \t\t\t\t\t\t}\n  // \t\t\t\t\t}\n  // \t\t\t\t\treturn content;\n  // \t\t\t\t});\n  // \t\t\t\treturn { ...module, content: updatedContents };\n  // \t\t\t}\n  // \t\t\treturn module;\n  // \t\t});\n  // \t});\n  // };\n  // const handleAddContent = (moduleIndex) => {\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map((module, idx) => {\n  // \t\t\tif (idx === moduleIndex) {\n  // \t\t\t\tlet updatedContents = [...(module.content || [])];\n  // \t\t\t\tif (selectedOption === \"video\") {\n  // \t\t\t\t\tupdatedContents.push({ type: \"video\", url: \"\" });\n  // \t\t\t\t} else if (selectedOption === \"text\") {\n  // \t\t\t\t\tupdatedContents.push({ type: \"text\", text: \"\" });\n  // \t\t\t\t} else if (selectedOption === \"quiz\") {\n  // \t\t\t\t\tconst existingQuizContentIndex = updatedContents.findIndex(content => content.type === \"quiz\");\n  // \t\t\t\t\tif (existingQuizContentIndex === -1) {\n  // \t\t\t\t\t\tconst quizData = {\n  // \t\t\t\t\t\t\tquestion: \"\",\n  // \t\t\t\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n  // \t\t\t\t\t\t\tcorrectAnswer: \"\",\n  // \t\t\t\t\t\t};\n  // \t\t\t\t\t\tupdatedContents.push({ type: \"quiz\", question: [quizData] });\n  // \t\t\t\t\t}\n  // \t\t\t\t}\n  // \t\t\t\treturn { ...module, content: updatedContents };\n  // \t\t\t}\n  // \t\t\treturn module;\n  // \t\t});\n  // \t});\n  // };\n  // const handleQuestion = (e, index) => {\n  // \tconst { name, value } = e.target;\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map(module => {\n  // \t\t\treturn {\n  // \t\t\t\t...module,\n  // \t\t\t\tcontent: module.content.map(item => {\n  // \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n  // \t\t\t\t\t\treturn {\n  // \t\t\t\t\t\t\t...item,\n  // \t\t\t\t\t\t\tquestion: item.question.map((question, qIndex) => {\n  // \t\t\t\t\t\t\t\tif (qIndex === index) {\n  // \t\t\t\t\t\t\t\t\treturn { ...question, [name]: value };\n  // \t\t\t\t\t\t\t\t}\n  // \t\t\t\t\t\t\t\treturn question;\n  // \t\t\t\t\t\t\t}),\n  // \t\t\t\t\t\t};\n  // \t\t\t\t\t}\n  // \t\t\t\t\treturn item;\n  // \t\t\t\t}),\n  // \t\t\t};\n  // \t\t});\n  // \t});\n  // };\n  // const handleAnswerChange = (questionIndex, answerIndex, e) => {\n  // \tconst { value } = e.target;\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map(module => {\n  // \t\t\treturn {\n  // \t\t\t\t...module,\n  // \t\t\t\tcontent: module.content.map(item => {\n  // \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n  // \t\t\t\t\t\treturn {\n  // \t\t\t\t\t\t\t...item,\n  // \t\t\t\t\t\t\tquestion: item.question.map((question, qIndex) => {\n  // \t\t\t\t\t\t\t\tif (qIndex === questionIndex) {\n  // \t\t\t\t\t\t\t\t\tconst updatedAnswers = [...question.answers];\n  // \t\t\t\t\t\t\t\t\tupdatedAnswers[answerIndex] = value;\n  // \t\t\t\t\t\t\t\t\treturn { ...question, answers: updatedAnswers };\n  // \t\t\t\t\t\t\t\t}\n  // \t\t\t\t\t\t\t\treturn question;\n  // \t\t\t\t\t\t\t}),\n  // \t\t\t\t\t\t};\n  // \t\t\t\t\t}\n  // \t\t\t\t\treturn item;\n  // \t\t\t\t}),\n  // \t\t\t};\n  // \t\t});\n  // \t});\n  // };\n  // const handleCorrectAnswerChange = (event, questionIndex) => {\n  // \tconst correctAnswerIndex = Number(event.target.value);\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map(module => {\n  // \t\t\treturn {\n  // \t\t\t\t...module,\n  // \t\t\t\tcontent: module.content.map(item => {\n  // \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n  // \t\t\t\t\t\treturn {\n  // \t\t\t\t\t\t\t...item,\n  // \t\t\t\t\t\t\tquestion: item.question.map((question, qIndex) => {\n  // \t\t\t\t\t\t\t\tif (qIndex === questionIndex) {\n  // \t\t\t\t\t\t\t\t\treturn { ...question, correctAnswer: question.answers[correctAnswerIndex] };\n  // \t\t\t\t\t\t\t\t}\n  // \t\t\t\t\t\t\t\treturn question;\n  // \t\t\t\t\t\t\t}),\n  // \t\t\t\t\t\t};\n  // \t\t\t\t\t}\n  // \t\t\t\t\treturn item;\n  // \t\t\t\t}),\n  // \t\t\t};\n  // \t\t});\n  // \t});\n  // };\n  // const handleAddQuestion = (moduleIndex) => {\n  // \tsetModules(prevModules => {\n  // \t\tconst updatedModules = [...prevModules];\n  // \t\tif (moduleIndex >= 0 && moduleIndex < updatedModules.length) {\n  // \t\t\tconst currentModule = updatedModules[moduleIndex];\n  // \t\t\tif (currentModule.content && Array.isArray(currentModule.content)) {\n  // \t\t\t\tconst quizContentIndex = currentModule.content.findIndex(item => item.type === \"quiz\");\n  // \t\t\t\tif (quizContentIndex !== -1) {\n  // \t\t\t\t\tconst updatedQuestions = [\n  // \t\t\t\t\t\t...(currentModule.content[quizContentIndex].question || []),\n  // \t\t\t\t\t\t{ question: \"\", answers: [\"\", \"\", \"\", \"\"], correctAnswer: \"\" },\n  // \t\t\t\t\t];\n  // \t\t\t\t\tupdatedModules[moduleIndex].content[quizContentIndex].question = updatedQuestions;\n  // \t\t\t\t}\n  // \t\t\t}\n  // \t\t}\n  // \t\treturn updatedModules;\n  // \t});\n  // };\n  // const handleDeleteQuestion = (questionIndex) => {\n  // \tsetModules(prevModules => {\n  // \t\treturn prevModules.map(module => {\n  // \t\t\treturn {\n  // \t\t\t\t...module,\n  // \t\t\t\tcontent: module.content.map(item => {\n  // \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n  // \t\t\t\t\t\treturn {\n  // \t\t\t\t\t\t\t...item,\n  // \t\t\t\t\t\t\tquestion: item.question.filter((_, qIndex) => qIndex !== questionIndex),\n  // \t\t\t\t\t\t};\n  // \t\t\t\t\t}\n  // \t\t\t\t\treturn item;\n  // \t\t\t\t}),\n  // \t\t\t};\n  // \t\t});\n  // \t});\n  // };\n\n\n  const handleSubmit = e => {\n    e.preventDefault(); // const course = {\n    // \tname: formData.courseName,\n    // \tdescription: formData.description,\n    // \tmodules: modules.map((module) => ({\n    // \t\tname: module.name,\n    // \t\tdescription: module.description,\n    // \t\tcontent: module.content.map((content) => ({\n    // \t\t\tname: content.name,\n    // \t\t\tdescription: content.description,\n    // \t\t})),\n    // \t})),\n    // };\n    // setModules([\n    // \t{ name: \"\", description: \"\", content: [{}] },\n    // ]);\n    // setFormData({ courseName: \"\", description: \"\" });\n  }; ////////////////////////////\n  // SHOW DATA\n  ////////////////////////////\n\n\n  const [showData, setShowData] = useState(true);\n\n  const formatCourseStructure = () => {\n    const object1 = {\n      name: course.courseName,\n      description: course.description,\n      modules: course.modules.map(module => ({\n        name: module.name,\n        description: module.description,\n        content: module.content.map(content => ({\n          name: content.name,\n          description: content.description\n        }))\n      }))\n    };\n    return JSON.stringify(object1, null, 2);\n  };\n\n  /*#__PURE__*/\n  _jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"container mt-0 module-box box pb-40\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crear Curso:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label text-large\",\n        children: \"Nombre:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: course.name,\n        onChange: handleInputChange,\n        className: \"form-control mb-20\",\n        placeholder: \"Nombre del curso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"form-label mt-2\",\n        children: \"Descripcion:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: course.description,\n        onChange: handleInputChange,\n        className: \"form-control mb-20\",\n        placeholder: \"Describa su curso aqui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 3\n    }, this), course.modules.length !== 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"mt-50\",\n      children: \"Crear modulos:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 35\n    }, this), course.modules.map((module, moduleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-20 boxs px-3 py-4 rounded module-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-10\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-label mt-2 mb-1\",\n                children: \"Titulo:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"name\",\n                value: module.name,\n                onChange: e => handleModuleChange(moduleIndex, e.target.value),\n                className: \"form-control mb-20\",\n                placeholder: \"Titulo del modulo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 405,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-md-2 d-flex align-items-center justify-content-center\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex justify-content-center sl-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: () => {\n                  handleDeleteModule(moduleIndex);\n                },\n                className: \"btn btn-del-modul\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 421,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 7\n      }, this), module.content.length !== 0 && /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mt-50\",\n        children: \"Crear contenido:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 9\n      }, this), module.content.map((content, contentIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-20 px-3 py-4 rounded module-shadow\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-10\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  className: \"\",\n                  children: \"Seleccione una opcion de creacion de contenido:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                  className: \"form-control\",\n                  value: selectedOption,\n                  onChange: e => handleChangeSelect(e, moduleIndex),\n                  children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"video\",\n                    children: \"Cargar video\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 452,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"text\",\n                    children: \"Crear articulo\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 453,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: \"quiz\",\n                    children: \"Crear quiz de preguntas y respuestas\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 454,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 17\n              }, this), selectedOption === \"video\" && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 19\n              }, this), selectedOption === \"text\" && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), selectedOption === \"quiz\" && /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 443,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-md-2 d-flex align-items-center justify-content-center\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex justify-content-center\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => {\n                    handleDeleteContent(moduleIndex, contentIndex);\n                  },\n                  className: \"btn btn-del-cont\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 480,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 11\n        }, this)\n      }, contentIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 9\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container d-flex justify-content-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => {\n            handleAddContent(moduleIndex);\n          },\n          className: \"btn btn-secondary btn-add btn-add-cont me-2 m-10\",\n          children: \"Agregar Contenido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 7\n      }, this)]\n    }, moduleIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 402,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container d-flex justify-content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddModule,\n        className: \"btn btn-secondary btn-add break-words me-2\",\n        children: \"Agregar Modulo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 513,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-send w-50 pt-50\",\n      children: \"Enviar formulario\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-box position-fixed top-0 end-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowData(!showData),\n        children: \"Toggle Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 5\n      }, this), showData && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"data\",\n        children: /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: formatCourseStructure()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 372,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AddCourseForm, \"r8Q8u6uI1Ylk/R5k65BX7HK/DSc=\", false, function () {\n  return [useCourseStore];\n});\n\n_c = AddCourseForm;\nexport default AddCourseForm;\nconst course = {\n  \"First course\": {\n    nombre: \"Fundamentos del Marketing Digital\",\n    descripción: \"Introducción a los conceptos básicos del marketing digital.\",\n    Módulos: [{\n      nombre: \"Introducción al Marketing Digital\",\n      Contenidos: [{\n        tipo: \"video\",\n        url: \"https://link-al-video-introductorio\"\n      }, {\n        tipo: \"texto\",\n        texto: \"Artículo sobre la historia del marketing digital\"\n      }, {\n        tipo: \"quiz\",\n        preguntas: [{\n          pregunta: \"¿Qué es el marketing digital?\",\n          opciones: [\"Publicidad en TV\", \"Marketing en Internet\", \"Radio marketing\"],\n          respuestaCorrecta: \"Marketing en Internet\"\n        }]\n      }]\n    }, {\n      nombre: \"SEO y SEM\",\n      Contenidos: [{\n        tipo: \"texto\",\n        texto: \"Guía básica de SEO\"\n      }, {\n        tipo: \"video\",\n        url: \"https://link-al-video-SEO\"\n      }, {\n        tipo: \"quiz\",\n        preguntas: [{\n          pregunta: \"¿Cuál es la diferencia principal entre SEO y SEM?\",\n          opciones: [\"Costo\", \"Visibilidad\", \"Ambos son iguales\"],\n          respuestaCorrecta: \"Costo\"\n        }]\n      }]\n    }]\n  }\n};\n/* \n\n\tconst [modules, setModules] = useState([]);\n\tconst [formData, setFormData] = useState({ courseName: \"\", description: \"\", modules: {} });\n\n\tconst [selectedOption, setSelectedOption] = useState(\"video\");\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n\t};\n\n\tconst handleChangeSelect = (e) => {\n\t\tsetSelectedOption(e.target.value);\n\t};\n\n\tconst handleModuleChange = (index, e) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\n\t\tif (selectedOption !== \"quiz\") {\n\t\t\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\t\t} else {\n\t\t\t// Handle quiz-specific module data if needed\n\t\t}\n\n\t\tsetModules(updatedModules);\n\t};\n\n\n\tconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\t\tif (!updatedContents[contentIndex]) {\n\t\t\tupdatedContents[contentIndex] = {};\n\t\t}\n\n\t\tupdatedContents[contentIndex] = {\n\t\t\t...updatedContents[contentIndex],\n\t\t\t[name]: value,\n\t\t};\n\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddContent = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\t\tupdatedContents.push({ name: \"\", description: \"\" });\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteModule = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules.splice(moduleIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddModule = () => {\n\t\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n\t};\n\n\tconst [quizContent, setQuizContent] = useState([\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n\n\tconst handleQuestion = (e, index) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedQuestion = [...quizContent];\n\t\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\t\tsetQuizContent(updatedQuestion);\n\t};\n\n\tconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\t\tconst { value } = e.target;\n\t\tconst updatedQuizContent = [...quizContent];\n\n\t\tif (!updatedQuizContent[questionIndex].answers) {\n\t\t\tupdatedQuizContent[questionIndex].answers = [];\n\t\t}\n\n\t\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\t\tupdatedAnswers[answerIndex] = value;\n\n\t\tupdatedQuizContent[questionIndex] = {\n\t\t\t...updatedQuizContent[questionIndex],\n\t\t\tanswers: updatedAnswers,\n\t\t};\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleCorrectAnswerChange = (event, questionIndex) => {\n\t\tconst correctAnswerIndex = Number(event.target.value);\n\t\tconst updatedQuizContent = [...quizContent];\n\t\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\t\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\t\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleAddQuestion = () => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent,\n\t\t\t{\n\t\t\t\tquestion: \"\",\n\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\t\tcorrect: \"\",\n\t\t\t},\n\t\t]);\n\t};\n\n\tconst handleDeleteQuestion = (questionIndex) => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t\t...prevQuizContent.slice(questionIndex + 1),\n\t\t]);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst course = {\n\t\t\tname: formData.courseName,\n\t\t\tdescription: formData.description,\n\t\t\tmodules: modules.map((module) => ({\n\t\t\t\tname: module.name,\n\t\t\t\tdescription: module.description,\n\t\t\t\tcontent: module.content.map((content) => ({\n\t\t\t\t\tname: content.name,\n\t\t\t\t\tdescription: content.description,\n\t\t\t\t})),\n\t\t\t})),\n\t\t};\n\n\t\tconsole.log(\"course data \", course);\n\n\t\tsetModules([\n\t\t\t{ name: \"\", description: \"\", content: [{ name: \"\", description: \"\" }] },\n\t\t]);\n\t\tsetFormData({ courseName: \"\", description: \"\" });\n\t};\n\n\n\t*/\n\nvar _c;\n\n$RefreshReg$(_c, \"AddCourseForm\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Create/AddCourseForm.js"],"names":["React","useEffect","useState","Quiz","useCourseStore","AddCourseForm","setCourse","course","handleQuestion","handleAnswerChange","handleCorrectAnswerChange","handleAddQuestion","handleDeleteQuestion","handleChangeSelect","handleAddModule","handleModuleChange","handleContentChange","handleDeleteModule","selectedOption","handleAddContent","handleDeleteContent","handleInputChange","fieldName","fieldValue","state","handleSubmit","e","preventDefault","showData","setShowData","formatCourseStructure","object1","name","courseName","description","modules","map","module","content","JSON","stringify","length","moduleIndex","target","value","contentIndex","nombre","descripción","Módulos","Contenidos","tipo","url","texto","preguntas","pregunta","opciones","respuestaCorrecta"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAE3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,QAAM;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA,cAArB;AAAqCC,IAAAA,kBAArC;AAAyDC,IAAAA,yBAAzD;AAAoFC,IAAAA,iBAApF;AAAuGC,IAAAA,oBAAvG;AAA6HC,IAAAA,kBAA7H;AAAiJC,IAAAA,eAAjJ;AAAkKC,IAAAA,kBAAlK;AAAsLC,IAAAA,mBAAtL;AACL;AACCC,IAAAA,kBAFI;AAEgBC,IAAAA,cAFhB;AAEgCC,IAAAA,gBAFhC;AAEkDC,IAAAA;AAFlD,MAE0EhB,cAAc,EAF9F,CAnB2B,CAwB3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIC;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMiB,iBAAiB,GAAI,CAACC,SAAD,EAAYC,UAAZ,KAA2B;AACrDjB,IAAAA,SAAS,CAAEkB,KAAD,KAAY;AACpBjB,MAAAA,MAAM,EAAE,EACN,GAAGiB,KAAK,CAACjB,MADH;AAEN,SAACe,SAAD,GAAaC;AAFP;AADY,KAAZ,CAAD,CAAT;AAMD,GAPA,CAjG2B,CA0G3B;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAME,YAAY,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF,GAD2B,CAG3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA,GArBD,CAjU2B,CA0V3B;AACA;AACA;;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,IAAD,CAAxC;;AACA,QAAM4B,qBAAqB,GAAG,MAAM;AACnC,UAAMC,OAAO,GAAG;AACfC,MAAAA,IAAI,EAAEzB,MAAM,CAAC0B,UADE;AAEfC,MAA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":["import React, { useEffect, useState } from \"react\";\nimport Quiz from \"./Quiz\";\nimport useCourseStore from \"../../store/store\";\n\nconst AddCourseForm = () => {\n\n\t// const [modules, setModules] = useState([\n\t// \t{\n\t// \t\tname: \"\",\n\t// \t\tcontent: [\n\t// \t\t\t{ type: \"video\", name: \"\", url: \"\" },\n\t// \t\t\t{ type: \"text\", title: \"\", text: \"\" },\n\t// \t\t\t{\n\t// \t\t\t\ttype: \"quiz\", question: [{\n\t// \t\t\t\t\tquestion: \"\",\n\t// \t\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t// \t\t\t\t\tcorrectAnswer: \"\",\n\t// \t\t\t\t}]\n\t// \t\t\t}\n\t// \t\t],\n\t// \t},\n\t// ]);\n\n\tconst { setCourse, course, handleQuestion, handleAnswerChange, handleCorrectAnswerChange, handleAddQuestion, handleDeleteQuestion, handleChangeSelect, handleAddModule, handleModuleChange, handleContentChange, \n\t\t// handleInputChange,\n\t\t handleDeleteModule, selectedOption, handleAddContent, handleDeleteContent } = useCourseStore()\n\n\n\t// const [modules, setModules] = useState([]);\n\t// const [formData, setFormData] = useState({\n\t// \tcourseName: \"\",\n\t// \tdescription: \"\",\n\t// \tmodules: {},\n\t// });\n\t// const [quizContent, setQuizContent] = useState([\n\t// \t{\n\t// \t\tquestion: \"\",\n\t// \t\tanswers: [\"\", \"\", \"\", \"\"],\n\t// \t\tcorrectAnswer: \"\",\n\t// \t},\n\t// ]);\n\n\t// const [selectedOption, setSelectedOption] = useState(\"video\");\n\n\t/* \n\thandleAddModule\n\thandleDeleteModule\n\thandleInputChange\n\thandleModuleChange\n\n\n\thandleChangeSelect\n\thandleDeleteContent\n\thandleContentChange\n\thandleAddContent\n\thandleQuestion\n\thandleAnswerChange\n\thandleCorrectAnswerChange\n\thandleAddQuestion\n\thandleDeleteQuestion\n\n\t\t*/\n\n\t///////////////////////////////////\n\t// FUNCTIONS WORKING\n\t///////////////////////////////////\n\n\t// const handleChangeSelect = (e, moduleIndex) => {\n\t// \tsetSelectedOption(e.target.value);\n\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map((module, idx) => {\n\t// \t\t\tif (idx === moduleIndex) {\n\t// \t\t\t\tconst updatedContents = module.content.map(content => {\n\t// \t\t\t\t\tif (content.type === e.target.value) {\n\t// \t\t\t\t\t\tif (e.target.value === \"video\") {\n\t// \t\t\t\t\t\t\treturn { type: \"video\", url: \"\" };\n\t// \t\t\t\t\t\t} else if (e.target.value === \"text\") {\n\t// \t\t\t\t\t\t\treturn { type: \"text\", text: \"\" };\n\t// \t\t\t\t\t\t} else if (e.target.value === \"quiz\") {\n\t// \t\t\t\t\t\t\tconst quizData = {\n\t// \t\t\t\t\t\t\t\tquestion: \"\",\n\t// \t\t\t\t\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t// \t\t\t\t\t\t\t\tcorrectAnswer: \"\",\n\t// \t\t\t\t\t\t\t};\n\t// \t\t\t\t\t\t\treturn { type: \"quiz\", question: [quizData] };\n\t// \t\t\t\t\t\t}\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\treturn content;\n\t// \t\t\t\t});\n\n\t// \t\t\t\treturn {\n\t// \t\t\t\t\t...module,\n\t// \t\t\t\t\tcontent: updatedContents,\n\t// \t\t\t\t};\n\t// \t\t\t}\n\t// \t\t\treturn module;\n\t// \t\t});\n\t// \t});\n\t// };\n\n\tconst handleInputChange =  (fieldName, fieldValue) => {\n\t\tsetCourse((state) => ({\n\t\t\t\tcourse: {\n\t\t\t\t\t\t...state.course,\n\t\t\t\t\t\t[fieldName]: fieldValue,\n\t\t\t\t},\n\t\t}));\n}\n\n\t// const handleInputChange = (e) => {\n\t// \tconst { name, value } = e.target;\n\t// \tsetFormData(prevData => ({ ...prevData, [name]: value }));\n\t// };\n\n\n\t// const handleDeleteContent = (moduleIndex, contentIndex) => {\n\t// \tsetModules(prevModules => {\n\t// \t\tconst updatedModules = [...prevModules];\n\t// \t\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\t// \t\treturn updatedModules;\n\t// \t});\n\t// };\n\n\t// const handleDeleteModule = (moduleIndex) => {\n\t// \tsetModules(prevModules => {\n\t// \t\tconst updatedModules = [...prevModules];\n\t// \t\tupdatedModules.splice(moduleIndex, 1);\n\t// \t\treturn updatedModules;\n\t// \t});\n\t// };\n\n\t// const handleAddModule = () => {\n\t// \tsetModules(prevModules => [...prevModules, { name: \"\", content: [] }]);\n\t// };\n\n\n\t// const handleModuleChange = (index, e) => {\n\t// \tconst { name, value } = e.target;\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map((module, idx) => {\n\t// \t\t\tif (idx === index) {\n\t// \t\t\t\treturn { ...module, [name]: value };\n\t// \t\t\t}\n\t// \t\t\treturn module;\n\t// \t\t});\n\t// \t});\n\t// };\n\n\t///////////////////////////////////////////////\n\t////////////////////////////////////////////////\n\n\t// const handleContentChange = (e, moduleIndex, contentIndex) => {\n\t// \tconst { name, value } = e.target;\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map((module, idx) => {\n\t// \t\t\tif (idx === moduleIndex) {\n\t// \t\t\t\tconst updatedContents = module.content.map((content, cIdx) => {\n\t// \t\t\t\t\tif (cIdx === contentIndex) {\n\t// \t\t\t\t\t\tif (content.type === \"video\" && (name === \"name\" || name === \"url\")) {\n\t// \t\t\t\t\t\t\treturn { ...content, [name]: value };\n\t// \t\t\t\t\t\t} else if (content.type === \"text\" && (name === \"title\" || name === \"text\")) {\n\t// \t\t\t\t\t\t\treturn { ...content, [name]: value };\n\t// \t\t\t\t\t\t}\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\treturn content;\n\t// \t\t\t\t});\n\t// \t\t\t\treturn { ...module, content: updatedContents };\n\t// \t\t\t}\n\t// \t\t\treturn module;\n\t// \t\t});\n\t// \t});\n\t// };\n\n\n\n\n\n\t// const handleAddContent = (moduleIndex) => {\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map((module, idx) => {\n\t// \t\t\tif (idx === moduleIndex) {\n\t// \t\t\t\tlet updatedContents = [...(module.content || [])];\n\t// \t\t\t\tif (selectedOption === \"video\") {\n\t// \t\t\t\t\tupdatedContents.push({ type: \"video\", url: \"\" });\n\t// \t\t\t\t} else if (selectedOption === \"text\") {\n\t// \t\t\t\t\tupdatedContents.push({ type: \"text\", text: \"\" });\n\t// \t\t\t\t} else if (selectedOption === \"quiz\") {\n\t// \t\t\t\t\tconst existingQuizContentIndex = updatedContents.findIndex(content => content.type === \"quiz\");\n\t// \t\t\t\t\tif (existingQuizContentIndex === -1) {\n\t// \t\t\t\t\t\tconst quizData = {\n\t// \t\t\t\t\t\t\tquestion: \"\",\n\t// \t\t\t\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t// \t\t\t\t\t\t\tcorrectAnswer: \"\",\n\t// \t\t\t\t\t\t};\n\t// \t\t\t\t\t\tupdatedContents.push({ type: \"quiz\", question: [quizData] });\n\t// \t\t\t\t\t}\n\t// \t\t\t\t}\n\t// \t\t\t\treturn { ...module, content: updatedContents };\n\t// \t\t\t}\n\t// \t\t\treturn module;\n\t// \t\t});\n\t// \t});\n\t// };\n\n\n\t// const handleQuestion = (e, index) => {\n\t// \tconst { name, value } = e.target;\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map(module => {\n\t// \t\t\treturn {\n\t// \t\t\t\t...module,\n\t// \t\t\t\tcontent: module.content.map(item => {\n\t// \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n\t// \t\t\t\t\t\treturn {\n\t// \t\t\t\t\t\t\t...item,\n\t// \t\t\t\t\t\t\tquestion: item.question.map((question, qIndex) => {\n\t// \t\t\t\t\t\t\t\tif (qIndex === index) {\n\t// \t\t\t\t\t\t\t\t\treturn { ...question, [name]: value };\n\t// \t\t\t\t\t\t\t\t}\n\t// \t\t\t\t\t\t\t\treturn question;\n\t// \t\t\t\t\t\t\t}),\n\t// \t\t\t\t\t\t};\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\treturn item;\n\t// \t\t\t\t}),\n\t// \t\t\t};\n\t// \t\t});\n\t// \t});\n\t// };\n\n\t// const handleAnswerChange = (questionIndex, answerIndex, e) => {\n\t// \tconst { value } = e.target;\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map(module => {\n\t// \t\t\treturn {\n\t// \t\t\t\t...module,\n\t// \t\t\t\tcontent: module.content.map(item => {\n\t// \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n\t// \t\t\t\t\t\treturn {\n\t// \t\t\t\t\t\t\t...item,\n\t// \t\t\t\t\t\t\tquestion: item.question.map((question, qIndex) => {\n\t// \t\t\t\t\t\t\t\tif (qIndex === questionIndex) {\n\t// \t\t\t\t\t\t\t\t\tconst updatedAnswers = [...question.answers];\n\t// \t\t\t\t\t\t\t\t\tupdatedAnswers[answerIndex] = value;\n\t// \t\t\t\t\t\t\t\t\treturn { ...question, answers: updatedAnswers };\n\t// \t\t\t\t\t\t\t\t}\n\t// \t\t\t\t\t\t\t\treturn question;\n\t// \t\t\t\t\t\t\t}),\n\t// \t\t\t\t\t\t};\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\treturn item;\n\t// \t\t\t\t}),\n\t// \t\t\t};\n\t// \t\t});\n\t// \t});\n\t// };\n\n\n\t// const handleCorrectAnswerChange = (event, questionIndex) => {\n\t// \tconst correctAnswerIndex = Number(event.target.value);\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map(module => {\n\t// \t\t\treturn {\n\t// \t\t\t\t...module,\n\t// \t\t\t\tcontent: module.content.map(item => {\n\t// \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n\t// \t\t\t\t\t\treturn {\n\t// \t\t\t\t\t\t\t...item,\n\t// \t\t\t\t\t\t\tquestion: item.question.map((question, qIndex) => {\n\t// \t\t\t\t\t\t\t\tif (qIndex === questionIndex) {\n\t// \t\t\t\t\t\t\t\t\treturn { ...question, correctAnswer: question.answers[correctAnswerIndex] };\n\t// \t\t\t\t\t\t\t\t}\n\t// \t\t\t\t\t\t\t\treturn question;\n\t// \t\t\t\t\t\t\t}),\n\t// \t\t\t\t\t\t};\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\treturn item;\n\t// \t\t\t\t}),\n\t// \t\t\t};\n\t// \t\t});\n\t// \t});\n\t// };\n\n\n\t// const handleAddQuestion = (moduleIndex) => {\n\t// \tsetModules(prevModules => {\n\t// \t\tconst updatedModules = [...prevModules];\n\t// \t\tif (moduleIndex >= 0 && moduleIndex < updatedModules.length) {\n\t// \t\t\tconst currentModule = updatedModules[moduleIndex];\n\t// \t\t\tif (currentModule.content && Array.isArray(currentModule.content)) {\n\t// \t\t\t\tconst quizContentIndex = currentModule.content.findIndex(item => item.type === \"quiz\");\n\t// \t\t\t\tif (quizContentIndex !== -1) {\n\t// \t\t\t\t\tconst updatedQuestions = [\n\t// \t\t\t\t\t\t...(currentModule.content[quizContentIndex].question || []),\n\t// \t\t\t\t\t\t{ question: \"\", answers: [\"\", \"\", \"\", \"\"], correctAnswer: \"\" },\n\t// \t\t\t\t\t];\n\t// \t\t\t\t\tupdatedModules[moduleIndex].content[quizContentIndex].question = updatedQuestions;\n\t// \t\t\t\t}\n\t// \t\t\t}\n\t// \t\t}\n\t// \t\treturn updatedModules;\n\t// \t});\n\t// };\n\n\n\t// const handleDeleteQuestion = (questionIndex) => {\n\t// \tsetModules(prevModules => {\n\t// \t\treturn prevModules.map(module => {\n\t// \t\t\treturn {\n\t// \t\t\t\t...module,\n\t// \t\t\t\tcontent: module.content.map(item => {\n\t// \t\t\t\t\tif (item.type === \"quiz\" && Array.isArray(item.question)) {\n\t// \t\t\t\t\t\treturn {\n\t// \t\t\t\t\t\t\t...item,\n\t// \t\t\t\t\t\t\tquestion: item.question.filter((_, qIndex) => qIndex !== questionIndex),\n\t// \t\t\t\t\t\t};\n\t// \t\t\t\t\t}\n\t// \t\t\t\t\treturn item;\n\t// \t\t\t\t}),\n\t// \t\t\t};\n\t// \t\t});\n\t// \t});\n\t// };\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\t// const course = {\n\t\t// \tname: formData.courseName,\n\t\t// \tdescription: formData.description,\n\t\t// \tmodules: modules.map((module) => ({\n\t\t// \t\tname: module.name,\n\t\t// \t\tdescription: module.description,\n\t\t// \t\tcontent: module.content.map((content) => ({\n\t\t// \t\t\tname: content.name,\n\t\t// \t\t\tdescription: content.description,\n\t\t// \t\t})),\n\t\t// \t})),\n\t\t// };\n\n\n\t\t// setModules([\n\t\t// \t{ name: \"\", description: \"\", content: [{}] },\n\t\t// ]);\n\t\t// setFormData({ courseName: \"\", description: \"\" });\n\t};\n\n\n\n\t////////////////////////////\n\t// SHOW DATA\n\t////////////////////////////\n\tconst [showData, setShowData] = useState(true);\n\tconst formatCourseStructure = () => {\n\t\tconst object1 = {\n\t\t\tname: course.courseName,\n\t\t\tdescription: course.description,\n\t\t\tmodules: course.modules.map((module) => ({\n\t\t\t\tname: module.name,\n\t\t\t\tdescription: module.description,\n\t\t\t\tcontent: module.content.map((content) => ({\n\t\t\t\t\tname: content.name,\n\t\t\t\t\tdescription: content.description,\n\t\t\t\t})),\n\t\t\t})),\n\t\t};\n\n\t\treturn JSON.stringify(object1, null, 2);\n\t};\n\n<form onSubmit={handleSubmit} className=\"container mt-0 module-box box pb-40\">\n  <h2>Crear Curso:</h2>\n\n  <div className=\"mb-3\">\n    <label className=\"form-label text-large\">Nombre:</label>\n    <input\n      type=\"text\"\n      name=\"name\"\n      value={course.name}\n      onChange={handleInputChange}\n      className=\"form-control mb-20\"\n      placeholder=\"Nombre del curso\"\n    />\n  </div>\n\n  <div className=\"mb-3\">\n    <label className=\"form-label mt-2\">Descripcion:</label>\n    <textarea\n      name=\"description\"\n      value={course.description}\n      onChange={handleInputChange}\n      className=\"form-control mb-20\"\n      placeholder=\"Describa su curso aqui\"\n    />\n  </div>\n\n  {/* Create Module Section Start */}\n  {course.modules.length !== 0 && <h3 className=\"mt-50\">Crear modulos:</h3>}\n\n  {course.modules.map((module, moduleIndex) => (\n    <div key={moduleIndex} className=\"mb-20 boxs px-3 py-4 rounded module-box\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-md-10\">\n            <div>\n              <label className=\"form-label mt-2 mb-1\">Titulo:</label>\n              <input\n                type=\"text\"\n                name=\"name\"\n                value={module.name}\n                onChange={(e) => handleModuleChange(moduleIndex, e.target.value)}\n                className=\"form-control mb-20\"\n                placeholder=\"Titulo del modulo\"\n              />\n            </div>\n          </div>\n\n          <div className=\"col-md-2 d-flex align-items-center justify-content-center\">\n            <div className=\"d-flex justify-content-center sl-btn\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  handleDeleteModule(moduleIndex);\n                }}\n                className=\"btn btn-del-modul\"\n              >\n                <i className=\"fa fa-trash\"></i>\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {module.content.length !== 0 && (\n        <h3 className=\"mt-50\">Crear contenido:</h3>\n      )}\n\n      {module.content.map((content, contentIndex) => (\n        <div key={contentIndex} className=\"mb-20 px-3 py-4 rounded module-shadow\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-10\">\n                {/* Selector Option Start */}\n                <div className=\"form-group\">\n                  <h5 className=\"\">Seleccione una opcion de creacion de contenido:</h5>\n                  <select\n                    className=\"form-control\"\n                    value={selectedOption}\n                    onChange={(e) => handleChangeSelect(e, moduleIndex)}\n                  >\n                    <option value=\"video\">Cargar video</option>\n                    <option value=\"text\">Crear articulo</option>\n                    <option value=\"quiz\">Crear quiz de preguntas y respuestas</option>\n                  </select>\n                </div>\n                {/* Selector Option End */}\n\n                {/* Content Options */}\n                {selectedOption === \"video\" && (\n                  <div>\n                    {/* Video Option */}\n                    {/* Implement your video content input fields here */}\n                  </div>\n                )}\n                {selectedOption === \"text\" && (\n                  <div>\n                    {/* Text Option */}\n                    {/* Implement your text content input fields here */}\n                  </div>\n                )}\n                {selectedOption === \"quiz\" && (\n                  <div>\n                    {/* Quiz Option */}\n                    {/* Implement your quiz content input fields here */}\n                  </div>\n                )}\n              </div>\n\n              <div className=\"col-md-2 d-flex align-items-center justify-content-center\">\n                <div className=\"d-flex justify-content-center\">\n                  <button\n                    type=\"button\"\n                    onClick={() => {\n                      handleDeleteContent(moduleIndex, contentIndex);\n                    }}\n                    className=\"btn btn-del-cont\"\n                  >\n                    <i className=\"fa fa-trash\"></i>\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      ))}\n\n      <div className=\"container d-flex justify-content-center\">\n        <button\n          type=\"button\"\n          onClick={() => {\n            handleAddContent(moduleIndex);\n          }}\n          className=\"btn btn-secondary btn-add btn-add-cont me-2 m-10\"\n        >\n          Agregar Contenido\n        </button>\n      </div>\n    </div>\n  ))}\n  {/* Create Module Section End */}\n\n  <div className=\"container d-flex justify-content-center\">\n    <button\n      type=\"button\"\n      onClick={handleAddModule}\n      className=\"btn btn-secondary btn-add break-words me-2\"\n    >\n      Agregar Modulo\n    </button>\n  </div>\n\n  <button type=\"submit\" className=\"btn btn-send w-50 pt-50\">\n    Enviar formulario\n  </button>\n\n  <div className=\"data-box position-fixed top-0 end-0\">\n    <button onClick={() => setShowData(!showData)}>Toggle Data</button>\n    {showData && (\n      <div className=\"data\">\n        <pre>{formatCourseStructure()}</pre>\n      </div>\n    )}\n  </div>\n</form>\n\n};\n\nexport default AddCourseForm;\n\nconst course = {\n\t\"First course\": {\n\t\tnombre: \"Fundamentos del Marketing Digital\",\n\t\tdescripción: \"Introducción a los conceptos básicos del marketing digital.\",\n\t\tMódulos: [\n\t\t\t{\n\t\t\t\tnombre: \"Introducción al Marketing Digital\",\n\t\t\t\tContenidos: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"video\",\n\t\t\t\t\t\turl: \"https://link-al-video-introductorio\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"texto\",\n\t\t\t\t\t\ttexto: \"Artículo sobre la historia del marketing digital\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"quiz\",\n\t\t\t\t\t\tpreguntas: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpregunta: \"¿Qué es el marketing digital?\",\n\t\t\t\t\t\t\t\topciones: [\n\t\t\t\t\t\t\t\t\t\"Publicidad en TV\",\n\t\t\t\t\t\t\t\t\t\"Marketing en Internet\",\n\t\t\t\t\t\t\t\t\t\"Radio marketing\",\n\t\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\t\trespuestaCorrecta: \"Marketing en Internet\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t\t{\n\t\t\t\tnombre: \"SEO y SEM\",\n\t\t\t\tContenidos: [\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"texto\",\n\t\t\t\t\t\ttexto: \"Guía básica de SEO\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"video\",\n\t\t\t\t\t\turl: \"https://link-al-video-SEO\",\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\ttipo: \"quiz\",\n\t\t\t\t\t\tpreguntas: [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpregunta: \"¿Cuál es la diferencia principal entre SEO y SEM?\",\n\t\t\t\t\t\t\t\topciones: [\"Costo\", \"Visibilidad\", \"Ambos son iguales\"],\n\t\t\t\t\t\t\t\trespuestaCorrecta: \"Costo\",\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t},\n\t\t],\n\t},\n};\n\n/* \n\n\tconst [modules, setModules] = useState([]);\n\tconst [formData, setFormData] = useState({ courseName: \"\", description: \"\", modules: {} });\n\n\tconst [selectedOption, setSelectedOption] = useState(\"video\");\n\tconst handleInputChange = (e) => {\n\t\tconst { name, value } = e.target;\n\t\tsetFormData((prevData) => ({ ...prevData, [name]: value }));\n\t};\n\n\tconst handleChangeSelect = (e) => {\n\t\tsetSelectedOption(e.target.value);\n\t};\n\n\tconst handleModuleChange = (index, e) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\n\t\tif (selectedOption !== \"quiz\") {\n\t\t\tupdatedModules[index] = { ...updatedModules[index], [name]: value };\n\t\t} else {\n\t\t\t// Handle quiz-specific module data if needed\n\t\t}\n\n\t\tsetModules(updatedModules);\n\t};\n\n\n\tconst handleContentChange = (e, moduleIndex, contentIndex) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = [...updatedModules[moduleIndex].content];\n\t\tif (!updatedContents[contentIndex]) {\n\t\t\tupdatedContents[contentIndex] = {};\n\t\t}\n\n\t\tupdatedContents[contentIndex] = {\n\t\t\t...updatedContents[contentIndex],\n\t\t\t[name]: value,\n\t\t};\n\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddContent = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tconst updatedContents = updatedModules[moduleIndex].content || [];\n\t\tupdatedContents.push({ name: \"\", description: \"\" });\n\t\tupdatedModules[moduleIndex] = {\n\t\t\t...updatedModules[moduleIndex],\n\t\t\tcontent: updatedContents,\n\t\t};\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteContent = (moduleIndex, contentIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules[moduleIndex].content.splice(contentIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleDeleteModule = (moduleIndex) => {\n\t\tconst updatedModules = [...modules];\n\t\tupdatedModules.splice(moduleIndex, 1);\n\t\tsetModules(updatedModules);\n\t};\n\n\tconst handleAddModule = () => {\n\t\tsetModules([...modules, { name: \"\", description: \"\", content: [] }]);\n\t};\n\n\tconst [quizContent, setQuizContent] = useState([\n\t\t{\n\t\t\tquestion: \"\",\n\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\tcorrect: \"\",\n\t\t},\n\t]);\n\n\tconst handleQuestion = (e, index) => {\n\t\tconst { name, value } = e.target;\n\t\tconst updatedQuestion = [...quizContent];\n\t\tupdatedQuestion[index] = { ...updatedQuestion[index], [name]: value };\n\t\tsetQuizContent(updatedQuestion);\n\t};\n\n\tconst handleAnswerChange = (questionIndex, answerIndex, e) => {\n\t\tconst { value } = e.target;\n\t\tconst updatedQuizContent = [...quizContent];\n\n\t\tif (!updatedQuizContent[questionIndex].answers) {\n\t\t\tupdatedQuizContent[questionIndex].answers = [];\n\t\t}\n\n\t\tconst updatedAnswers = [...updatedQuizContent[questionIndex].answers];\n\t\tupdatedAnswers[answerIndex] = value;\n\n\t\tupdatedQuizContent[questionIndex] = {\n\t\t\t...updatedQuizContent[questionIndex],\n\t\t\tanswers: updatedAnswers,\n\t\t};\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleCorrectAnswerChange = (event, questionIndex) => {\n\t\tconst correctAnswerIndex = Number(event.target.value);\n\t\tconst updatedQuizContent = [...quizContent];\n\t\tconst updatedAnswers = { ...updatedQuizContent[questionIndex] };\n\n\t\tupdatedAnswers.correct = updatedAnswers.answers[correctAnswerIndex];\n\t\tupdatedQuizContent[questionIndex] = updatedAnswers;\n\n\t\tsetQuizContent(updatedQuizContent);\n\t};\n\n\tconst handleAddQuestion = () => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent,\n\t\t\t{\n\t\t\t\tquestion: \"\",\n\t\t\t\tanswers: [\"\", \"\", \"\", \"\"],\n\t\t\t\tcorrect: \"\",\n\t\t\t},\n\t\t]);\n\t};\n\n\tconst handleDeleteQuestion = (questionIndex) => {\n\t\tsetQuizContent((prevQuizContent) => [\n\t\t\t...prevQuizContent.slice(0, questionIndex),\n\t\t\t...prevQuizContent.slice(questionIndex + 1),\n\t\t]);\n\t};\n\n\tconst handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\t\tconst course = {\n\t\t\tname: formData.courseName,\n\t\t\tdescription: formData.description,\n\t\t\tmodules: modules.map((module) => ({\n\t\t\t\tname: module.name,\n\t\t\t\tdescription: module.description,\n\t\t\t\tcontent: module.content.map((content) => ({\n\t\t\t\t\tname: content.name,\n\t\t\t\t\tdescription: content.description,\n\t\t\t\t})),\n\t\t\t})),\n\t\t};\n\n\t\tconsole.log(\"course data \", course);\n\n\t\tsetModules([\n\t\t\t{ name: \"\", description: \"\", content: [{ name: \"\", description: \"\" }] },\n\t\t]);\n\t\tsetFormData({ courseName: \"\", description: \"\" });\n\t};\n\n\n\t*/\n"]},"metadata":{},"sourceType":"module"}