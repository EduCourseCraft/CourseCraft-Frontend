{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/VideoContent.js\";\nimport React from 'react';\n\nconst VideoContent = ({\n  content\n}) => {\n  const {\n    title,\n    url\n  } = content; // Function to convert YouTube links to embed URLs\n\n  const getEmbedUrl = url => {\n    const videoId = url.split('v=')[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  }; // Check if the provided URL is a YouTube link\n\n\n  const isYouTubeLink = url => {\n    return url.includes('youtube.com') || url.includes('youtu.be');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: '1',\n        position: 'relative'\n      },\n      children: isYouTubeLink(url) ? /*#__PURE__*/_jsxDEV(\"iframe\", {\n        style: {\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          top: 0,\n          left: 0\n        },\n        src: getEmbedUrl(url),\n        title: title,\n        frameBorder: \"0\",\n        allow: \"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\",\n        allowFullScreen: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"video\", {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        controls: true,\n        children: [/*#__PURE__*/_jsxDEV(\"source\", {\n          src: url,\n          type: \"video/mp4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), \"Your browser does not support the video tag.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_c = VideoContent;\nexport default VideoContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoContent\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/VideoContent.js"],"names":["React","VideoContent","content","title","url","getEmbedUrl","videoId","split","isYouTubeLink","includes","display","flexDirection","height","marginBottom","flex","position","width","top","left"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACpC,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAiBF,OAAvB,CADoC,CAGpC;;AACA,QAAMG,WAAW,GAAID,GAAD,IAAS;AAC3B,UAAME,OAAO,GAAGF,GAAG,CAACG,KAAJ,CAAU,IAAV,EAAgB,CAAhB,CAAhB;AACA,WAAQ,iCAAgCD,OAAQ,EAAhD;AACD,GAHD,CAJoC,CASpC;;;AACA,QAAME,aAAa,GAAIJ,GAAD,IAAS;AAC7B,WAAOA,GAAG,CAACK,QAAJ,CAAa,aAAb,KAA+BL,GAAG,CAACK,QAAJ,CAAa,UAAb,CAAtC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAA6B,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,aAAa,EAAE,QAAlC;AAA4CC,MAAAA,MAAM,EAAE;AAApD,KAApC;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEC,QAAAA,YAAY,EAAE;AAAhB,OAAX;AAAA,gBAAsCV;AAAtC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,IAAI,EAAE,GAAR;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAZ;AAAA,gBACGP,aAAa,CAACJ,GAAD,CAAb,gBACC;AACE,QAAA,KAAK,EAAE;AAAEW,UAAAA,QAAQ,EAAE,UAAZ;AAAwBC,UAAAA,KAAK,EAAE,MAA/B;AAAuCJ,UAAAA,MAAM,EAAE,MAA/C;AAAuDK,UAAAA,GAAG,EAAE,CAA5D;AAA+DC,UAAAA,IAAI,EAAE;AAArE,SADT;AAEE,QAAA,GAAG,EAAEb,WAAW,CAACD,GAAD,CAFlB;AAGE,QAAA,KAAK,EAAED,KAHT;AAIE,QAAA,WAAW,EAAC,GAJd;AAKE,QAAA,KAAK,EAAC,yEALR;AAME,QAAA,eAAe;AANjB;AAAA;AAAA;AAAA;AAAA,cADD,gBAUC;AAAO,QAAA,KAAK,EAAE;AAAEa,UAAAA,KAAK,EAAE,MAAT;AAAiBJ,UAAAA,MAAM,EAAE;AAAzB,SAAd;AAAiD,QAAA,QAAQ,MAAzD;AAAA,gCACE;AAAQ,UAAA,GAAG,EAAER,GAAb;AAAkB,UAAA,IAAI,EAAC;AAAvB;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CApCD;;KAAMH,Y;AAsCN,eAAeA,YAAf","sourcesContent":["import React from 'react';\n\nconst VideoContent = ({ content }) => {\n  const { title, url } = content;\n\n  // Function to convert YouTube links to embed URLs\n  const getEmbedUrl = (url) => {\n    const videoId = url.split('v=')[1];\n    return `https://www.youtube.com/embed/${videoId}`;\n  };\n\n  // Check if the provided URL is a YouTube link\n  const isYouTubeLink = (url) => {\n    return url.includes('youtube.com') || url.includes('youtu.be');\n  };\n\n  return (\n    <div className=\"content-box\" style={{ display: 'flex', flexDirection: 'column', height: '100%' }}>\n      <h4 style={{ marginBottom: '10px' }}>{title}</h4>\n      <div style={{ flex: '1', position: 'relative' }}>\n        {isYouTubeLink(url) ? (\n          <iframe\n            style={{ position: 'absolute', width: '100%', height: '100%', top: 0, left: 0 }}\n            src={getEmbedUrl(url)}\n            title={title}\n            frameBorder=\"0\"\n            allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n            allowFullScreen\n          ></iframe>\n        ) : (\n          <video style={{ width: '100%', height: '100%' }} controls>\n            <source src={url} type=\"video/mp4\" />\n            Your browser does not support the video tag.\n          </video>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default VideoContent;\n"]},"metadata":{},"sourceType":"module"}