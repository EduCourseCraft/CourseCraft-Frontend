{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\";\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n  _s();\n\n  const [fetchData, setFetchData] = useState([]);\n  const [fetchedCategories, setFetchedCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(\"Mostrar todo\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n  useEffect(() => {\n    const fetchDataAndCategories = async () => {\n      try {\n        // Fetch courses data\n        const coursesResponse = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`);\n        const coursesData = await coursesResponse.json();\n        setFetchData(coursesData); // Fetch categories data\n\n        const categoriesResponse = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`);\n        const categoriesData = await categoriesResponse.json();\n        const filteredCategories = categoriesData.filter(category => category.active === true);\n        filteredCategories.unshift({\n          id: 12341,\n          name: \"Mostrar todo\"\n        });\n        setFetchedCategories(filteredCategories);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchDataAndCategories();\n  }, []);\n\n  const renderCoursePanel = () => {\n    const filteredCourses = activeCategory === \"Mostrar todo\" ? fetchData : fetchData.filter(course => course.courseData.category.includes(activeCategory));\n    const offset = currentPage * coursesPerPage;\n    const currentPageCourses = filteredCourses.slice(offset, offset + coursesPerPage);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentPageCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4 col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(CourseSingleTwo, {\n          courseClass: \"courses-item md-mb-30\",\n          courseImg: courseImg1,\n          courseTitle: course.courseData.name || \"Curso en desarrollo\",\n          courseDuration: course.courseData.duration || \"10\",\n          courseId: course.id || \"112\",\n          courseCategory: course.courseData.category && course.courseData.category.length > 0 ? course.courseData.category.join(\", \") : \"Web development\",\n          courseDetail: course.courseData.detail\n        }, course.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this)\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this);\n  };\n\n  const handleTabClick = category => {\n    setActiveCategory(category);\n    setCurrentPage(0);\n  };\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\"\n    });\n    setCurrentPage(selected);\n  };\n\n  const totalCourses = activeCategory === \"Mostrar todo\" ? fetchData.length : fetchData.filter(course => course.courseData.category.includes(activeCategory)).length;\n  const pageCount = Math.ceil(totalCourses / coursesPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rs-popular-course\",\n    className: \"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          className: \"gridFilter text-center mb-10 md-mb-10\",\n          children: fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabClick(category.name),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this)\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 17\n            }, this), renderCoursePanel(), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              className: \"pagination\",\n              previousLabel: \"Previous\",\n              nextLabel: \"Next\",\n              breakLabel: \"...\",\n              pageCount: pageCount,\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 5,\n              onPageChange: handlePageChange,\n              containerClassName: \"pagination\",\n              activeClassName: \"active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CoursePart, \"rKR5m/0J6J/7IMuDiP3GdziocpQ=\");\n\n_c = CoursePart;\nexport default CoursePart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePart\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js"],"names":["React","useEffect","useState","Tab","Tabs","TabList","TabPanel","CourseSingleTwo","ReactPaginate","courseImg1","CoursePart","fetchData","setFetchData","fetchedCategories","setFetchedCategories","activeCategory","setActiveCategory","currentPage","setCurrentPage","coursesPerPage","fetchDataAndCategories","coursesResponse","fetch","process","env","REACT_APP_ROOT_URL","REACT_APP_COURSES_GET_ALL","coursesData","json","categoriesResponse","REACT_APP_CATEGORIES_GET_ALL","categoriesData","filteredCategories","filter","category","active","unshift","id","name","error","console","renderCoursePanel","filteredCourses","course","courseData","includes","offset","currentPageCourses","slice","map","duration","length","join","detail","handleTabClick","handlePageChange","selected","window","scrollTo","top","behavior","totalCourses","pageCount","Math","ceil"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,EAA6BC,QAA7B,QAA6C,YAA7C;AACA,OAAOC,eAAP,MAA4B,0CAA5B;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AAEA,OAAOC,UAAP,MAAuB,gCAAvB;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACW,iBAAD,EAAoBC,oBAApB,IAA4CZ,QAAQ,CAAC,EAAD,CAA1D;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,cAAD,CAApD;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgChB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMiB,cAAc,GAAG,CAAvB;AAEAlB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMmB,sBAAsB,GAAG,YAAY;AACzC,UAAI;AACF;AACA,cAAMC,eAAe,GAAG,MAAMC,KAAK,CAChC,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,GAAEF,OAAO,CAACC,GAAR,CAAYE,yBAA0B,EADzC,CAAnC;AAGA,cAAMC,WAAW,GAAG,MAAMN,eAAe,CAACO,IAAhB,EAA1B;AACAhB,QAAAA,YAAY,CAACe,WAAD,CAAZ,CANE,CAQF;;AACA,cAAME,kBAAkB,GAAG,MAAMP,KAAK,CACnC,GAAEC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,GAAEF,OAAO,CAACC,GAAR,CAAYM,4BAA6B,EADzC,CAAtC;AAGA,cAAMC,cAAc,GAAG,MAAMF,kBAAkB,CAACD,IAAnB,EAA7B;AACA,cAAMI,kBAAkB,GAAGD,cAAc,CAACE,MAAf,CACxBC,QAAD,IAAcA,QAAQ,CAACC,MAAT,KAAoB,IADT,CAA3B;AAGAH,QAAAA,kBAAkB,CAACI,OAAnB,CAA2B;AACzBC,UAAAA,EAAE,EAAE,KADqB;AAEzBC,UAAAA,IAAI,EAAE;AAFmB,SAA3B;AAIAxB,QAAAA,oBAAoB,CAACkB,kBAAD,CAApB;AACD,OArBD,CAqBE,OAAOO,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACD,KAAR,CAAc,sBAAd,EAAsCA,KAAtC;AACD;AACF,KAzBD;;AA2BAnB,IAAAA,sBAAsB;AACvB,GA7BQ,EA6BN,EA7BM,CAAT;;AA+BA,QAAMqB,iBAAiB,GAAG,MAAM;AAC9B,UAAMC,eAAe,GACnB3B,cAAc,KAAK,cAAnB,GACIJ,SADJ,GAEIA,SAAS,CAACsB,MAAV,CAAkBU,MAAD,IACfA,MAAM,CAACC,UAAP,CAAkBV,QAAlB,CAA2BW,QAA3B,CAAoC9B,cAApC,CADF,CAHN;AAOA,UAAM+B,MAAM,GAAG7B,WAAW,GAAGE,cAA7B;AACA,UAAM4B,kBAAkB,GAAGL,eAAe,CAACM,KAAhB,CACzBF,MADyB,EAEzBA,MAAM,GAAG3B,cAFgB,CAA3B;AAKA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,gBACG4B,kBAAkB,CAACE,GAAnB,CAAwBN,MAAD,iBACtB;AAAqB,QAAA,SAAS,EAAC,mBAA/B;AAAA,+BACE,QAAC,eAAD;AAEE,UAAA,WAAW,EAAC,uBAFd;AAGE,UAAA,SAAS,EAAElC,UAHb;AAIE,UAAA,WAAW,EAAEkC,MAAM,CAACC,UAAP,CAAkBN,IAAlB,IAA0B,qBAJzC;AAKE,UAAA,cAAc,EAAEK,MAAM,CAACC,UAAP,CAAkBM,QAAlB,IAA8B,IALhD;AAME,UAAA,QAAQ,EAAEP,MAAM,CAACN,EAAP,IAAa,KANzB;AAOE,UAAA,cAAc,EACZM,MAAM,CAACC,UAAP,CAAkBV,QAAlB,IAA8BS,MAAM,CAACC,UAAP,CAAkBV,QAAlB,CAA2BiB,MAA3B,GAAoC,CAAlE,GACIR,MAAM,CAACC,UAAP,CAAkBV,QAAlB,CAA2BkB,IAA3B,CAAgC,IAAhC,CADJ,GAEI,iBAVR;AAYE,UAAA,YAAY,EAAET,MAAM,CAACC,UAAP,CAAkBS;AAZlC,WACOV,MAAM,CAACN,EADd;AAAA;AAAA;AAAA;AAAA;AADF,SAAUM,MAAM,CAACN,EAAjB;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAsBD,GApCD;;AAsCA,QAAMiB,cAAc,GAAIpB,QAAD,IAAc;AACnClB,IAAAA,iBAAiB,CAACkB,QAAD,CAAjB;AACAhB,IAAAA,cAAc,CAAC,CAAD,CAAd;AACD,GAHD;;AAKA,QAAMqC,gBAAgB,GAAG,CAAC;AAAEC,IAAAA;AAAF,GAAD,KAAkB;AACzCC,IAAAA,MAAM,CAACC,QAAP,CAAgB;AACdC,MAAAA,GAAG,EAAE,GADS;AAEdC,MAAAA,QAAQ,EAAE;AAFI,KAAhB;AAIA1C,IAAAA,cAAc,CAACsC,QAAD,CAAd;AACD,GAND;;AAQA,QAAMK,YAAY,GAChB9C,cAAc,KAAK,cAAnB,GACIJ,SAAS,CAACwC,MADd,GAEIxC,SAAS,CAACsB,MAAV,CAAkBU,MAAD,IACfA,MAAM,CAACC,UAAP,CAAkBV,QAAlB,CAA2BW,QAA3B,CAAoC9B,cAApC,CADF,EAEEoC,MALR;AAMA,QAAMW,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAUH,YAAY,GAAG1C,cAAzB,CAAlB;AAEA,sBACE;AACE,IAAA,EAAE,EAAC,mBADL;AAEE,IAAA,SAAS,EAAC,uEAFZ;AAAA,2BAIE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,IAAD;AAAA,gCACE,QAAC,OAAD;AAAS,UAAA,SAAS,EAAC,uCAAnB;AAAA,oBACGN,iBAAiB,CAACoC,GAAlB,CAAuBf,QAAD,iBACrB,QAAC,GAAD;AAAuB,YAAA,OAAO,EAAE,MAAMoB,cAAc,CAACpB,QAAQ,CAACI,IAAV,CAApD;AAAA,mCACE;AAAA,wBAASJ,QAAQ,CAACI;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF,aAAUJ,QAAQ,CAACG,EAAnB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,EAQGxB,iBAAiB,CAACoC,GAAlB,CAAuBf,QAAD,iBACrB,QAAC,QAAD;AAAA,iCACE;AAAA,oCACE;AAAA,wBAAKA,QAAQ,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,oBADF,EAEGG,iBAAiB,EAFpB,eAGE,QAAC,aAAD;AACE,cAAA,SAAS,EAAC,YADZ;AAEE,cAAA,aAAa,EAAE,UAFjB;AAGE,cAAA,SAAS,EAAE,MAHb;AAIE,cAAA,UAAU,EAAE,KAJd;AAKE,cAAA,SAAS,EAAEqB,SALb;AAME,cAAA,oBAAoB,EAAE,CANxB;AAOE,cAAA,kBAAkB,EAAE,CAPtB;AAQE,cAAA,YAAY,EAAEP,gBARhB;AASE,cAAA,kBAAkB,EAAE,YATtB;AAUE,cAAA,eAAe,EAAE;AAVnB;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,WAAerB,QAAQ,CAACG,EAAxB;AAAA;AAAA;AAAA;AAAA,gBADD,CARH;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAsCD,CAvID;;GAAM3B,U;;KAAAA,U;AAyIN,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\";\n\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n  const [fetchData, setFetchData] = useState([]);\n  const [fetchedCategories, setFetchedCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(\"Mostrar todo\");\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n\n  useEffect(() => {\n    const fetchDataAndCategories = async () => {\n      try {\n        // Fetch courses data\n        const coursesResponse = await fetch(\n          `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`\n        );\n        const coursesData = await coursesResponse.json();\n        setFetchData(coursesData);\n\n        // Fetch categories data\n        const categoriesResponse = await fetch(\n          `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`\n        );\n        const categoriesData = await categoriesResponse.json();\n        const filteredCategories = categoriesData.filter(\n          (category) => category.active === true\n        );\n        filteredCategories.unshift({\n          id: 12341,\n          name: \"Mostrar todo\",\n        });\n        setFetchedCategories(filteredCategories);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchDataAndCategories();\n  }, []);\n\n  const renderCoursePanel = () => {\n    const filteredCourses =\n      activeCategory === \"Mostrar todo\"\n        ? fetchData\n        : fetchData.filter((course) =>\n            course.courseData.category.includes(activeCategory)\n          );\n\n    const offset = currentPage * coursesPerPage;\n    const currentPageCourses = filteredCourses.slice(\n      offset,\n      offset + coursesPerPage\n    );\n\n    return (\n      <div className=\"row\">\n        {currentPageCourses.map((course) => (\n          <div key={course.id} className=\"col-lg-4 col-md-6\">\n            <CourseSingleTwo\n              key={course.id}\n              courseClass=\"courses-item md-mb-30\"\n              courseImg={courseImg1}\n              courseTitle={course.courseData.name || \"Curso en desarrollo\"}\n              courseDuration={course.courseData.duration || \"10\"}\n              courseId={course.id || \"112\"}\n              courseCategory={\n                course.courseData.category && course.courseData.category.length > 0\n                  ? course.courseData.category.join(\", \")\n                  : \"Web development\"\n              }\n              courseDetail={course.courseData.detail}\n            />\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  const handleTabClick = (category) => {\n    setActiveCategory(category);\n    setCurrentPage(0);\n  };\n\n  const handlePageChange = ({ selected }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\",\n    });\n    setCurrentPage(selected);\n  };\n\n  const totalCourses =\n    activeCategory === \"Mostrar todo\"\n      ? fetchData.length\n      : fetchData.filter((course) =>\n          course.courseData.category.includes(activeCategory)\n        ).length;\n  const pageCount = Math.ceil(totalCourses / coursesPerPage);\n\n  return (\n    <div\n      id=\"rs-popular-course\"\n      className=\"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\"\n    >\n      <div className=\"container\">\n        <Tabs>\n          <TabList className=\"gridFilter text-center mb-10 md-mb-10\">\n            {fetchedCategories.map((category) => (\n              <Tab key={category.id} onClick={() => handleTabClick(category.name)}>\n                <button>{category.name}</button>\n              </Tab>\n            ))}\n          </TabList>\n          {fetchedCategories.map((category) => (\n            <TabPanel key={category.id}>\n              <div>\n                <h2>{category.name}</h2>\n                {renderCoursePanel()}\n                <ReactPaginate\n                  className=\"pagination\"\n                  previousLabel={\"Previous\"}\n                  nextLabel={\"Next\"}\n                  breakLabel={\"...\"}\n                  pageCount={pageCount}\n                  marginPagesDisplayed={2}\n                  pageRangeDisplayed={5}\n                  onPageChange={handlePageChange}\n                  containerClassName={\"pagination\"}\n                  activeClassName={\"active\"}\n                />\n              </div>\n            </TabPanel>\n          ))}\n        </Tabs>\n      </div>\n    </div>\n  );\n};\n\nexport default CoursePart;\n"]},"metadata":{},"sourceType":"module"}