{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/course-flow/CourseFlow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { ListGroup, ListGroupItem, Collapse, Container, Row, Col, Button } from 'react-bootstrap';\n\nconst CourseFlow = () => {\n  _s();\n\n  // State variables\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [selectedContent, setSelectedContent] = useState(null); // Content click handler\n\n  const handleContentClick = index => {\n    setSelectedContent(index);\n  }; // Button click handler\n\n\n  const handleButtonClick = () => {\n    setIsMenuOpen(!isMenuOpen);\n  };\n\n  const courseData = [{\n    title: 'Lecture 1',\n    content: 'Content for Lecture 1...'\n  }, {\n    title: 'Lecture 2',\n    content: 'Content for Lecture 2...'\n  } // ... more lectures\n  ];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"course-container outred position-relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: '10px',\n        right: '10px',\n        zIndex: 5\n      },\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        onClick: handleButtonClick,\n        children: isMenuOpen ? 'Hide Menu' : 'Show Menu'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: isMenuOpen ? 9 : 12,\n        className: \"d-flex flex-column \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: selectedContent !== null ? courseData[selectedContent].title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: selectedContent !== null ? courseData[selectedContent].content : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 3,\n        className: \"d-flex flex-column ms-auto relative\",\n        children: /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isMenuOpen,\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            children: courseData.map((lecture, index) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n              action: true,\n              onClick: () => handleContentClick(index),\n              children: lecture.title\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CourseFlow, \"HjeOpZzPQMlFMIKk2k9g0kAvJ4o=\");\n\n_c = CourseFlow;\nexport default CourseFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseFlow\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/course-flow/CourseFlow.js"],"names":["React","useState","ListGroup","ListGroupItem","Collapse","Container","Row","Col","Button","CourseFlow","isMenuOpen","setIsMenuOpen","selectedContent","setSelectedContent","handleContentClick","index","handleButtonClick","courseData","title","content","position","top","right","zIndex","map","lecture"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n ListGroup,\n ListGroupItem,\n Collapse,\n Container,\n Row,\n Col,\n Button,\n} from 'react-bootstrap';\n\nconst CourseFlow = () => {\n // State variables\n const [isMenuOpen, setIsMenuOpen] = useState(true);\n const [selectedContent, setSelectedContent] = useState(null);\n\n // Content click handler\n const handleContentClick = (index) => {\n  setSelectedContent(index);\n };\n\n // Button click handler\n const handleButtonClick = () => {\n  setIsMenuOpen(!isMenuOpen);\n };\n\n const courseData = [\n  { title: 'Lecture 1', content: 'Content for Lecture 1...' },\n  { title: 'Lecture 2', content: 'Content for Lecture 2...' },\n  // ... more lectures\n ];\n\n return (\n  <Container fluid className=\"course-container outred position-relative\">\n   <div style={{ position: 'absolute', top: '10px', right: '10px', zIndex: 5 }}>\n    <Button variant=\"dark\" onClick={handleButtonClick}>\n     {isMenuOpen ? 'Hide Menu' : 'Show Menu'}\n    </Button>\n   </div>\n   <Row>\n    {/* Content column with dynamic width */}\n    <Col xs={12} md={isMenuOpen ? 9 : 12} className=\"d-flex flex-column \"\n    >\n     {/* Content box */}\n     <div >\n\n      <h2>{selectedContent !== null ? courseData[selectedContent].title : ''}</h2>\n      <p>{selectedContent !== null ? courseData[selectedContent].content : ''}</p>\n     </div>\n    </Col>\n\n    {/* Menu column, always visible with conditional collapse */}\n    <Col xs={12} md={3} className=\"d-flex flex-column ms-auto relative\">\n     <Collapse in={isMenuOpen}>\n      <ListGroup>\n       {courseData.map((lecture, index) => (\n        <ListGroupItem key={index} action onClick={() => handleContentClick(index)}>\n         {lecture.title}\n        </ListGroupItem>\n       ))}\n      </ListGroup>\n     </Collapse>\n    </Col>\n   </Row>\n  </Container >\n );\n};\n\nexport default CourseFlow;\n"]},"metadata":{},"sourceType":"module"}