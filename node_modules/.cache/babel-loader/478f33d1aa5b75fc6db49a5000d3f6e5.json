{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Auth/AdminGuard.js\";\nimport React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst AdminGuard = ({\n  component: Component,\n  userRole,\n  isAuthenticated,\n  ...rest\n}) => /*#__PURE__*/_jsxDEV(Route, { ...rest,\n  render: props => isAuthenticated && userRole === \"admin\" ? /*#__PURE__*/_jsxDEV(Component, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/404\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 10,\n  columnNumber: 2\n}, this);\n\n_c = AdminGuard;\nexport default AdminGuard;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminGuard\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/Auth/AdminGuard.js"],"names":["React","Redirect","Route","AdminGuard","component","Component","userRole","isAuthenticated","rest","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,KAAnB,QAAgC,kBAAhC;;AAEA,MAAMC,UAAU,GAAG,CAAC;AACnBC,EAAAA,SAAS,EAAEC,SADQ;AAEnBC,EAAAA,QAFmB;AAGnBC,EAAAA,eAHmB;AAInB,KAAGC;AAJgB,CAAD,kBAMlB,QAAC,KAAD,OACKA,IADL;AAEC,EAAA,MAAM,EAAGC,KAAD,IACPF,eAAe,IAAID,QAAQ,KAAK,OAAhC,gBACC,QAAC,SAAD,OAAeG;AAAf;AAAA;AAAA;AAAA;AAAA,UADD,gBAGC,QAAC,QAAD;AAAU,IAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AANH;AAAA;AAAA;AAAA;AAAA,QAND;;KAAMN,U;AAkBN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nconst AdminGuard = ({\n component: Component,\n userRole,\n isAuthenticated,\n ...rest\n}) => (\n <Route\n  {...rest}\n  render={(props) =>\n   isAuthenticated && userRole === \"admin\" ? (\n    <Component {...props} />\n   ) : (\n    <Redirect to=\"/404\" />\n   )\n  }\n />\n);\n\nexport default AdminGuard;\n"]},"metadata":{},"sourceType":"module"}