{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/admin-all-courses/AdminCourseSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\"; // Course courseImg\n\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst AdminAllCourses = () => {\n  _s();\n\n  const [fetchData, setFetchData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n  useEffect(() => {\n    const getCourses = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`);\n        const data = await response.json();\n        setFetchData(data);\n      } catch (error) {\n        console.error(\"Error fetching courses:\", error);\n      }\n    };\n\n    getCourses();\n  }, []);\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\"\n    });\n    setCurrentPage(selected);\n  };\n\n  const totalCourses = fetchData.length;\n  const pageCount = Math.ceil(totalCourses / coursesPerPage);\n\n  const renderCourses = () => {\n    const startIndex = currentPage * coursesPerPage;\n    const selectedCourses = fetchData.slice(startIndex, startIndex + coursesPerPage);\n    return selectedCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: course.courseData.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Active: \", course.active ? \"Yes\" : \"No\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleActivate(course.id),\n        children: \"Activate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(course.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleModify(course.id),\n        children: \"Modify\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this)]\n    }, course.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this));\n  };\n\n  const handleActivate = id => {// Logic to activate the course with the given id\n  };\n\n  const handleDelete = id => {// Logic to delete the course with the given id\n  };\n\n  const handleModify = id => {// Logic to modify the course with the given id\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [renderCourses(), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      breakLabel: \"...\",\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageChange,\n      containerClassName: \"pagination\",\n      activeClassName: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n\n_s(AdminAllCourses, \"l6aKGHIfCy7o/Kh9dgdLB70z48U=\");\n\n_c = AdminAllCourses;\nexport default AdminAllCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminAllCourses\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/admin-all-courses/AdminCourseSection.js"],"names":["React","useEffect","useState","Tab","Tabs","TabList","TabPanel","CourseSingleTwo","ReactPaginate","courseImg1","AdminAllCourses","fetchData","setFetchData","currentPage","setCurrentPage","coursesPerPage","getCourses","response","fetch","process","env","REACT_APP_ROOT_URL","REACT_APP_COURSES_GET_ALL","data","json","error","console","handlePageChange","selected","window","scrollTo","top","behavior","totalCourses","length","pageCount","Math","ceil","renderCourses","startIndex","selectedCourses","slice","map","course","courseData","name","active","handleActivate","id","handleDelete","handleModify"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\";\n\n// Course courseImg\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst AdminAllCourses = () => {\n  const [fetchData, setFetchData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n\n  useEffect(() => {\n      const getCourses = async () => {\n          try {\n              const response = await fetch(\n                  `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`\n              );\n              const data = await response.json();\n              setFetchData(data);\n          } catch (error) {\n              console.error(\"Error fetching courses:\", error);\n          }\n      };\n\n      getCourses();\n  }, []);\n\n  const handlePageChange = ({ selected }) => {\n      window.scrollTo({\n          top: 250,\n          behavior: \"smooth\",\n      });\n      setCurrentPage(selected);\n  };\n\n  const totalCourses = fetchData.length;\n  const pageCount = Math.ceil(totalCourses / coursesPerPage);\n\n  const renderCourses = () => {\n      const startIndex = currentPage * coursesPerPage;\n      const selectedCourses = fetchData.slice(startIndex, startIndex + coursesPerPage);\n\n      return selectedCourses.map(course => (\n          <div key={course.id}>\n              <p>{course.courseData.name}</p>\n              <p>Active: {course.active ? \"Yes\" : \"No\"}</p>\n              <button onClick={() => handleActivate(course.id)}>Activate</button>\n              <button onClick={() => handleDelete(course.id)}>Delete</button>\n              <button onClick={() => handleModify(course.id)}>Modify</button>\n          </div>\n      ));\n  };\n\n  const handleActivate = (id) => {\n      // Logic to activate the course with the given id\n  };\n\n  const handleDelete = (id) => {\n      // Logic to delete the course with the given id\n  };\n\n  const handleModify = (id) => {\n      // Logic to modify the course with the given id\n  };\n\n  return (\n      <div>\n          {renderCourses()}\n          <ReactPaginate\n              previousLabel={\"Previous\"}\n              nextLabel={\"Next\"}\n              breakLabel={\"...\"}\n              pageCount={pageCount}\n              marginPagesDisplayed={2}\n              pageRangeDisplayed={5}\n              onPageChange={handlePageChange}\n              containerClassName={\"pagination\"}\n              activeClassName={\"active\"}\n          />\n      </div>\n  );\n};\nexport default AdminAllCourses;\n"]},"metadata":{},"sourceType":"module"}