{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/QuizContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst QuizContent = ({\n  quizData\n}) => {\n  _s();\n\n  const [selectedAnswers, setSelectedAnswers] = useState(new Array(quizData.questions.length).fill(null));\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  const handleOptionSelect = (questionIndex, answerIndex) => {\n    if (!isSubmitted) {\n      const newAnswers = [...selectedAnswers];\n      newAnswers[questionIndex] = answerIndex === newAnswers[questionIndex] ? null : answerIndex;\n      setSelectedAnswers(newAnswers);\n    }\n  };\n\n  const handleSubmit = () => {\n    setIsSubmitted(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"content-box quiz-content\",\n    children: [quizData.questions.map((question, questionIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: question.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: question.answers.map((answer, answerIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `option ${selectedAnswers[questionIndex] === answerIndex ? 'selected' : ''} ${isSubmitted && selectedAnswers[questionIndex] === answerIndex && question.correctAnswer === answerIndex ? 'correct' : ''} ${isSubmitted && selectedAnswers[questionIndex] === answerIndex && question.correctAnswer !== answerIndex ? 'incorrect' : ''}`,\n          onClick: () => handleOptionSelect(questionIndex, answerIndex),\n          style: {\n            backgroundColor: selectedAnswers[questionIndex] === answerIndex ? '#f0f0f0' : 'initial'\n          },\n          children: answer\n        }, answerIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 6\n      }, this)]\n    }, questionIndex, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)), /*#__PURE__*/_jsxDEV(Button, {\n      onClick: handleSubmit,\n      disabled: isSubmitted,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n};\n\n_s(QuizContent, \"LYif+jBgqprIxy26D6QV4uhIppQ=\");\n\n_c = QuizContent;\nexport default QuizContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizContent\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/components/CourseFlow/QuizContent.js"],"names":["React","useState","Button","QuizContent","quizData","selectedAnswers","setSelectedAnswers","Array","questions","length","fill","isSubmitted","setIsSubmitted","handleOptionSelect","questionIndex","answerIndex","newAnswers","handleSubmit","map","question","answers","answer","correctAnswer","backgroundColor"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrC,QAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCL,QAAQ,CAAC,IAAIM,KAAJ,CAAUH,QAAQ,CAACI,SAAT,CAAmBC,MAA7B,EAAqCC,IAArC,CAA0C,IAA1C,CAAD,CAAtD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,KAAD,CAA9C;;AAEA,QAAMY,kBAAkB,GAAG,CAACC,aAAD,EAAgBC,WAAhB,KAAgC;AAC1D,QAAI,CAACJ,WAAL,EAAkB;AACjB,YAAMK,UAAU,GAAG,CAAC,GAAGX,eAAJ,CAAnB;AACAW,MAAAA,UAAU,CAACF,aAAD,CAAV,GAA4BC,WAAW,KAAKC,UAAU,CAACF,aAAD,CAA1B,GAA4C,IAA5C,GAAmDC,WAA/E;AACAT,MAAAA,kBAAkB,CAACU,UAAD,CAAlB;AACA;AACD,GAND;;AAQA,QAAMC,YAAY,GAAG,MAAM;AAC1BL,IAAAA,cAAc,CAAC,IAAD,CAAd;AACA,GAFD;;AAIA,sBACC;AAAK,IAAA,SAAS,EAAC,0BAAf;AAAA,eAEER,QAAQ,CAACI,SAAT,CAAmBU,GAAnB,CAAuB,CAACC,QAAD,EAAWL,aAAX,kBACvB;AAAyB,MAAA,SAAS,EAAC,oBAAnC;AAAA,8BACC;AAAA,kBAAKK,QAAQ,CAACA;AAAd;AAAA;AAAA;AAAA;AAAA,cADD,eAEC;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,kBACEA,QAAQ,CAACC,OAAT,CAAiBF,GAAjB,CAAqB,CAACG,MAAD,EAASN,WAAT,kBACrB;AAEC,UAAA,SAAS,EAAG,UAASV,eAAe,CAACS,aAAD,CAAf,KAAmCC,WAAnC,GAAiD,UAAjD,GAA8D,EAAG,IAAGJ,WAAW,IAAIN,eAAe,CAACS,aAAD,CAAf,KAAmCC,WAAlD,IAAiEI,QAAQ,CAACG,aAAT,KAA2BP,WAA5F,GAA0G,SAA1G,GAAsH,EAAG,IAAGJ,WAAW,IAAIN,eAAe,CAACS,aAAD,CAAf,KAAmCC,WAAlD,IAAiEI,QAAQ,CAACG,aAAT,KAA2BP,WAA5F,GAA0G,WAA1G,GAAwH,EAAG,EAFjV;AAGC,UAAA,OAAO,EAAE,MAAMF,kBAAkB,CAACC,aAAD,EAAgBC,WAAhB,CAHlC;AAIC,UAAA,KAAK,EAAE;AAAEQ,YAAAA,eAAe,EAAElB,eAAe,CAACS,aAAD,CAAf,KAAmCC,WAAnC,GAAiD,SAAjD,GAA6D;AAAhF,WAJR;AAAA,oBAMEM;AANF,WACMN,WADN;AAAA;AAAA;AAAA;AAAA,gBADA;AADF;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA,OAAUD,aAAV;AAAA;AAAA;AAAA;AAAA,YADA,CAFF,eAoBC,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAEG,YAAjB;AAA+B,MAAA,QAAQ,EAAEN,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YApBD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAwBA,CAxCD;;GAAMR,W;;KAAAA,W;AA0CN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react';\nimport { Button } from 'react-bootstrap';\n\nconst QuizContent = ({ quizData }) => {\n const [selectedAnswers, setSelectedAnswers] = useState(new Array(quizData.questions.length).fill(null));\n const [isSubmitted, setIsSubmitted] = useState(false);\n\n const handleOptionSelect = (questionIndex, answerIndex) => {\n  if (!isSubmitted) {\n   const newAnswers = [...selectedAnswers];\n   newAnswers[questionIndex] = answerIndex === newAnswers[questionIndex] ? null : answerIndex;\n   setSelectedAnswers(newAnswers);\n  }\n };\n\n const handleSubmit = () => {\n  setIsSubmitted(true);\n };\n\n return (\n  <div className=\"content-box quiz-content\">\n   {/* Render quiz questions and options */}\n   {quizData.questions.map((question, questionIndex) => (\n    <div key={questionIndex} className=\"question-container\">\n     <h3>{question.question}</h3>\n     <div className=\"options-container\">\n      {question.answers.map((answer, answerIndex) => (\n       <div\n        key={answerIndex}\n        className={`option ${selectedAnswers[questionIndex] === answerIndex ? 'selected' : ''} ${isSubmitted && selectedAnswers[questionIndex] === answerIndex && question.correctAnswer === answerIndex ? 'correct' : ''} ${isSubmitted && selectedAnswers[questionIndex] === answerIndex && question.correctAnswer !== answerIndex ? 'incorrect' : ''}`}\n        onClick={() => handleOptionSelect(questionIndex, answerIndex)}\n        style={{ backgroundColor: selectedAnswers[questionIndex] === answerIndex ? '#f0f0f0' : 'initial' }}\n       >\n        {answer}\n       </div>\n      ))}\n     </div>\n    </div>\n   ))}\n   {/* Submit button */}\n   <Button onClick={handleSubmit} disabled={isSubmitted}>Submit</Button>\n  </div>\n );\n};\n\nexport default QuizContent;\n"]},"metadata":{},"sourceType":"module"}