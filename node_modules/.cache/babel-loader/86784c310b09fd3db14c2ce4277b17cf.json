{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/course-flow/CourseFlow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { ListGroup, ListGroupItem, Collapse, Container, Row, Col, Button } from 'react-bootstrap';\nimport VideoContent from \"../../components/CourseFlow/VideoContent\";\nimport TextContent from \"../../components/CourseFlow/TextContent\";\nimport QuizContent from \"../../components/CourseFlow/QuizContent\";\n\nconst CourseFlow = ({\n  courseData\n}) => {\n  _s();\n\n  const {\n    lastVisited\n  } = courseData; // State variables\n\n  const [openModuleIndexes, setOpenModuleIndexes] = useState([]);\n  const [selectedContent, setSelectedContent] = useState(null);\n  const [menuOpen, setMenuOpen] = useState(true); // Content click handler\n\n  const handleContentClick = (moduleIndex, contentIndex) => {\n    setSelectedContent({\n      moduleIndex,\n      contentIndex\n    });\n  }; // Module click handler\n\n\n  const handleModuleClick = index => {\n    if (openModuleIndexes.includes(index)) {\n      setOpenModuleIndexes(openModuleIndexes.filter(i => i !== index));\n    } else {\n      setOpenModuleIndexes([...openModuleIndexes, index]);\n    }\n  }; // Toggle menu handler\n\n\n  const toggleMenu = () => {\n    setMenuOpen(!menuOpen);\n  };\n\n  useEffect(() => {\n    // Simulate click event for the last visited content\n    if (lastVisited && courseData.modules[lastVisited.moduleIndex]) {\n      handleModuleClick(lastVisited.moduleIndex);\n      handleContentClick(lastVisited.moduleIndex, lastVisited.contentIndex);\n    }\n  }, [lastVisited, courseData.modules]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"course-container position-relative px-0 py-3\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"m-0\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: menuOpen ? 9 : 12,\n        className: \"d-flex flex-column\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"content-box\",\n          children: selectedContent !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex].type === 'video' && /*#__PURE__*/_jsxDEV(VideoContent, {\n              content: courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 10\n            }, this), courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex].type === 'text' && /*#__PURE__*/_jsxDEV(TextContent, {\n              content: courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 10\n            }, this), courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex].type === 'quiz' && /*#__PURE__*/_jsxDEV(QuizContent, {\n              content: courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 10\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this), menuOpen && /*#__PURE__*/_jsxDEV(Col, {\n        xs: 12,\n        md: 3,\n        className: \"d-flex flex-column content-menu\",\n        children: courseData.modules.map((module, moduleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-1\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroupItem, {\n            onClick: () => handleModuleClick(moduleIndex),\n            style: {\n              cursor: 'pointer'\n            },\n            className: \"button-list\",\n            children: module.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: openModuleIndexes.includes(moduleIndex),\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              children: module.content.map((content, contentIndex) => /*#__PURE__*/_jsxDEV(ListGroupItem, {\n                action: true,\n                onClick: () => handleContentClick(moduleIndex, contentIndex),\n                style: {\n                  cursor: 'pointer',\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'center'\n                },\n                className: \"button-menu text-center\",\n                children: [content.type === 'quiz' ? 'Quiz' : content.title, content.completed && /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"completed-icon fa fa-check\",\n                  style: {\n                    marginLeft: '5px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 35\n                }, this)]\n              }, `${moduleIndex}-${contentIndex}`, true, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 12\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 9\n          }, this)]\n        }, moduleIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 8\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: toggleMenu,\n        className: `menu-toggle-button position-absolute top-1 ${menuOpen ? 'pill-position' : 'end-0'} pill-button`,\n        children: menuOpen ? /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-chevron-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 19\n        }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n          class: \"fa fa-chevron-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CourseFlow, \"EWqR8xnS9lavtijgK6gOAnYlo5c=\");\n\n_c = CourseFlow;\nexport default CourseFlow;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseFlow\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/course-flow/CourseFlow.js"],"names":["React","useEffect","useState","ListGroup","ListGroupItem","Collapse","Container","Row","Col","Button","VideoContent","TextContent","QuizContent","CourseFlow","courseData","lastVisited","openModuleIndexes","setOpenModuleIndexes","selectedContent","setSelectedContent","menuOpen","setMenuOpen","handleContentClick","moduleIndex","contentIndex","handleModuleClick","index","includes","filter","i","toggleMenu","modules","content","type","map","module","cursor","name","display","alignItems","justifyContent","title","completed","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ListGroup, ListGroupItem, Collapse, Container, Row, Col, Button } from 'react-bootstrap';\nimport VideoContent from \"../../components/CourseFlow/VideoContent\";\nimport TextContent from \"../../components/CourseFlow/TextContent\";\nimport QuizContent from \"../../components/CourseFlow/QuizContent\";\n\nconst CourseFlow = ({ courseData }) => {\n const { lastVisited } = courseData\n // State variables\n const [openModuleIndexes, setOpenModuleIndexes] = useState([]);\n const [selectedContent, setSelectedContent] = useState(null);\n const [menuOpen, setMenuOpen] = useState(true);\n\n // Content click handler\n const handleContentClick = (moduleIndex, contentIndex) => {\n  setSelectedContent({ moduleIndex, contentIndex });\n };\n\n // Module click handler\n const handleModuleClick = (index) => {\n  if (openModuleIndexes.includes(index)) {\n   setOpenModuleIndexes(openModuleIndexes.filter((i) => i !== index));\n  } else {\n   setOpenModuleIndexes([...openModuleIndexes, index]);\n  }\n };\n\n // Toggle menu handler\n const toggleMenu = () => {\n  setMenuOpen(!menuOpen);\n };\n\n useEffect(() => {\n  // Simulate click event for the last visited content\n  if (lastVisited && courseData.modules[lastVisited.moduleIndex]) {\n   handleModuleClick(lastVisited.moduleIndex);\n   handleContentClick(lastVisited.moduleIndex, lastVisited.contentIndex);\n  }\n }, [lastVisited, courseData.modules]);\n\n\n return (\n  <Container fluid className=\"course-container position-relative px-0 py-3\">\n   <Row className='m-0'>\n    {/* Content column with dynamic width */}\n    <Col xs={12} md={menuOpen ? 9 : 12} className=\"d-flex flex-column\">\n     {/* Content box */}\n     <div className=\"content-box\">\n      {/* Render selected content */}\n      {selectedContent !== null && (\n       <>\n        {courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex].type === 'video' && (\n         <VideoContent content={courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex]} />\n        )}\n        {courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex].type === 'text' && (\n         <TextContent content={courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex]} />\n        )}\n        {courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex].type === 'quiz' && (\n         <QuizContent content={courseData.modules[selectedContent.moduleIndex].content[selectedContent.contentIndex]} />\n        )}\n       </>\n      )}\n     </div>\n    </Col>\n\n    {/* Menu column */}\n    {menuOpen && (\n     <Col xs={12} md={3} className=\"d-flex flex-column content-menu\">\n      {/* Render menu items based on modules */}\n      {courseData.modules.map((module, moduleIndex) => (\n       <div key={moduleIndex} className=\"mb-1\">\n        <ListGroupItem\n         onClick={() => handleModuleClick(moduleIndex)}\n         style={{ cursor: 'pointer' }}\n         className=\"button-list\"\n        >\n         {module.name}\n        </ListGroupItem>\n        <Collapse in={openModuleIndexes.includes(moduleIndex)}>\n         <ListGroup>\n          {module.content.map((content, contentIndex) => (\n           <ListGroupItem\n            key={`${moduleIndex}-${contentIndex}`}\n            action\n            onClick={() => handleContentClick(moduleIndex, contentIndex)}\n            style={{ cursor: 'pointer', display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n            className='button-menu text-center'\n           >\n            {content.type === 'quiz' ? 'Quiz' : content.title}\n            {content.completed && <i className=\"completed-icon fa fa-check\" style={{ marginLeft: '5px' }}></i>}\n           </ListGroupItem>\n          ))}\n         </ListGroup>\n        </Collapse>\n       </div>\n      ))}\n     </Col>\n    )}\n\n    {/* Button to toggle menu */}\n    <Button onClick={toggleMenu} className={`menu-toggle-button position-absolute top-1 ${menuOpen ? 'pill-position' : 'end-0'} pill-button`}>\n     {menuOpen ? (<i class=\"fa fa-chevron-right\"></i>) : (<i class=\"fa fa-chevron-left\"></i>)}\n    </Button>\n   </Row>\n  </Container>\n );\n};\n\nexport default CourseFlow;\n"]},"metadata":{},"sourceType":"module"}