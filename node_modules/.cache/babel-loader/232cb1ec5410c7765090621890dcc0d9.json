{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\"; // Course courseImg\n\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n  _s();\n\n  ////////////////////////////\n  // GET COURSES DATA\n  ////////////////////////////\n  // const [cursesData, setCursesData] = useState([]);\n  // useEffect(() => {\n  // \tconst fetchData = async () => {\n  // \t\ttry {\n  // \t\t\tconst response = await fetch(\n  // \t\t\t\t`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`\n  // \t\t\t);\n  // \t\t\tconst data = await response.json();\n  // \t\t\tconsole.log(data);\n  // \t\t} catch (error) {\n  // \t\t\tconsole.error(\"Error fetching categories:\", error);\n  // \t\t}\n  // \t};\n  // \tfetchData();\n  // \t// eslint-disable-next-line react-hooks/exhaustive-deps\n  // }, []);\n  ////////////////////////////\n  // GET CATEGORIES DATA\n  ////////////////////////////\n  ////////////////////////////\n  // RENDER CATEGORIES TABS\n  ////////////////////////////\n  const [fetchedCategories, setFetchedCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(undefined);\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        var _filtered$;\n\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`);\n        const data = await response.json();\n        const filtered = data.filter(category => category.active === true);\n        setFetchedCategories(filtered);\n        setActiveCategory((_filtered$ = filtered[0]) === null || _filtered$ === void 0 ? void 0 : _filtered$.name); // Set initial active category to the first category name if available\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const renderCoursePanel = () => {\n    const filteredCourses = activeCategory ? fetchData.filter(course => course.category.includes(activeCategory)) : fetchData;\n    console.log(\"courses \", filteredCourses);\n    const offset = currentPage * coursesPerPage;\n    const currentPageCourses = filteredCourses.slice(offset, offset + coursesPerPage);\n    console.log(\"current \", currentPageCourses);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: currentPageCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-4 col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(CourseSingleTwo, {\n          courseClass: \"courses-item md-mb-30\",\n          courseImg: courseImg1,\n          courseTitle: course.name || \"Curso en desarrollo\",\n          courseDuration: course.duration || \"10\",\n          courseId: course.id || \"12312312\",\n          courseCategory: course.category || \"En desarrollo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }, this)\n      }, course.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 4\n    }, this);\n  };\n\n  const handleTabClick = category => {\n    setActiveCategory(category);\n    setCurrentPage(0); // Reset page when switching categories\n  };\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\"\n    });\n    setCurrentPage(selected);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rs-popular-course\",\n    className: \"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          className: \"gridFilter text-center mb-10 md-mb-10\",\n          children: [/*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabClick(undefined),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"All courses\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 8\n            }, this)\n          }, \"All\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 7\n          }, this), fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabClick(category.name),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 9\n            }, this)\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 8\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: activeCategory || \"All Categories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 8\n            }, this), renderCoursePanel(), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              className: \"pagination\",\n              previousLabel: \"Previous\",\n              nextLabel: \"Next\",\n              breakLabel: \"...\",\n              pageCount: Math.ceil(fetchData.filter(course => activeCategory ? course.category.includes(activeCategory) : true).length / coursesPerPage),\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 5,\n              onPageChange: handlePageChange,\n              containerClassName: \"pagination\",\n              activeClassName: \"active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 8\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 3\n  }, this);\n};\n\n_s(CoursePart, \"0t94NKgLKsr97eW26AA5imEpYS4=\");\n\n_c = CoursePart;\nexport default CoursePart;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursePart\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/cursos/CourseSection.js"],"names":["React","useEffect","useState","Tab","Tabs","TabList","TabPanel","CourseSingleTwo","ReactPaginate","courseImg1","CoursePart","fetchedCategories","setFetchedCategories","activeCategory","setActiveCategory","undefined","currentPage","setCurrentPage","coursesPerPage","fetchCategories","response","fetch","process","env","REACT_APP_ROOT_URL","REACT_APP_CATEGORIES_GET_ALL","data","json","filtered","filter","category","active","name","error","console","renderCoursePanel","filteredCourses","fetchData","course","includes","log","offset","currentPageCourses","slice","map","duration","id","handleTabClick","handlePageChange","selected","window","scrollTo","top","behavior","Math","ceil","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\";\n\n// Course courseImg\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst CoursePart = () => {\n\t\n\t////////////////////////////\n\t// GET COURSES DATA\n\t////////////////////////////\n\t// const [cursesData, setCursesData] = useState([]);\n\n\t// useEffect(() => {\n\t// \tconst fetchData = async () => {\n\t// \t\ttry {\n\t// \t\t\tconst response = await fetch(\n\t// \t\t\t\t`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`\n\t// \t\t\t);\n\t// \t\t\tconst data = await response.json();\n\n\t// \t\t\tconsole.log(data);\n\t// \t\t} catch (error) {\n\t// \t\t\tconsole.error(\"Error fetching categories:\", error);\n\t// \t\t}\n\t// \t};\n\n\t// \tfetchData();\n\t// \t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t// }, []);\n\n\t////////////////////////////\n\t// GET CATEGORIES DATA\n\t////////////////////////////\n\n\t////////////////////////////\n\t// RENDER CATEGORIES TABS\n\t////////////////////////////\n\tconst [fetchedCategories, setFetchedCategories] = useState([]);\n\tconst [activeCategory, setActiveCategory] = useState(undefined);\n\tconst [currentPage, setCurrentPage] = useState(0);\n\tconst coursesPerPage = 9;\n\n\tuseEffect(() => {\n\t\tconst fetchCategories = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`\n\t\t\t\t);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tconst filtered = data.filter((category) => category.active === true);\n\t\t\t\tsetFetchedCategories(filtered);\n\t\t\t\tsetActiveCategory(filtered[0]?.name); // Set initial active category to the first category name if available\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error fetching categories:\", error);\n\t\t\t}\n\t\t};\n\n\t\tfetchCategories();\n\t}, []);\n\n\tconst renderCoursePanel = () => {\n\t\tconst filteredCourses = activeCategory\n\t\t\t? fetchData.filter((course) => course.category.includes(activeCategory))\n\t\t\t: fetchData;\n\n\t\tconsole.log(\"courses \", filteredCourses);\n\n\t\tconst offset = currentPage * coursesPerPage;\n\t\tconst currentPageCourses = filteredCourses.slice(\n\t\t\toffset,\n\t\t\toffset + coursesPerPage\n\t\t);\n\n\t\tconsole.log(\"current \", currentPageCourses);\n\n\t\treturn (\n\t\t\t<div className=\"row\">\n\t\t\t\t{currentPageCourses.map((course) => (\n\t\t\t\t\t<div key={course.id} className=\"col-lg-4 col-md-6\">\n\t\t\t\t\t\t<CourseSingleTwo\n\t\t\t\t\t\t\tcourseClass=\"courses-item md-mb-30\"\n\t\t\t\t\t\t\tcourseImg={courseImg1}\n\t\t\t\t\t\t\tcourseTitle={course.name || \"Curso en desarrollo\"}\n\t\t\t\t\t\t\tcourseDuration={course.duration || \"10\"}\n\t\t\t\t\t\t\tcourseId={course.id || \"12312312\"}\n\t\t\t\t\t\t\tcourseCategory={course.category || \"En desarrollo\"}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t))}\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst handleTabClick = (category) => {\n\t\tsetActiveCategory(category);\n\t\tsetCurrentPage(0); // Reset page when switching categories\n\t};\n\n\tconst handlePageChange = ({ selected }) => {\n\t\twindow.scrollTo({\n\t\t\ttop: 250,\n\t\t\tbehavior: \"smooth\",\n\t\t});\n\t\tsetCurrentPage(selected);\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tid=\"rs-popular-course\"\n\t\t\tclassName=\"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\"\n\t\t>\n\t\t\t<div className=\"container\">\n\t\t\t\t<Tabs>\n\t\t\t\t\t<TabList className=\"gridFilter text-center mb-10 md-mb-10\">\n\t\t\t\t\t\t<Tab key=\"All\" onClick={() => handleTabClick(undefined)}>\n\t\t\t\t\t\t\t<button>All courses</button>\n\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t{fetchedCategories.map((category) => (\n\t\t\t\t\t\t\t<Tab key={category.id} onClick={() => handleTabClick(category.name)}>\n\t\t\t\t\t\t\t\t<button>{category.name}</button>\n\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t))}\n\t\t\t\t\t</TabList>\n\n\t\t\t\t\t<TabPanel>\n\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<h2>{activeCategory || \"All Categories\"}</h2>\n\t\t\t\t\t\t\t{renderCoursePanel()}\n\t\t\t\t\t\t\t<ReactPaginate\n\t\t\t\t\t\t\t\tclassName=\"pagination\"\n\t\t\t\t\t\t\t\tpreviousLabel={\"Previous\"}\n\t\t\t\t\t\t\t\tnextLabel={\"Next\"}\n\t\t\t\t\t\t\t\tbreakLabel={\"...\"}\n\t\t\t\t\t\t\t\tpageCount={Math.ceil(\n\t\t\t\t\t\t\t\t\tfetchData.filter((course) =>\n\t\t\t\t\t\t\t\t\t\tactiveCategory ? course.category.includes(activeCategory) : true\n\t\t\t\t\t\t\t\t\t).length / coursesPerPage\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\tmarginPagesDisplayed={2}\n\t\t\t\t\t\t\t\tpageRangeDisplayed={5}\n\t\t\t\t\t\t\t\tonPageChange={handlePageChange}\n\t\t\t\t\t\t\t\tcontainerClassName={\"pagination\"}\n\t\t\t\t\t\t\t\tactiveClassName={\"active\"}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</TabPanel>\n\t\t\t\t</Tabs>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default CoursePart;\n"]},"metadata":{},"sourceType":"module"}