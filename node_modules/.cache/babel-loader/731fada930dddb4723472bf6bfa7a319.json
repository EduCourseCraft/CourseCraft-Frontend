{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/admin-all-courses/AdminCourseSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport ReactPaginate from \"react-paginate\";\nimport Swal from \"sweetalert2\";\n\nconst AdminAllCourses = () => {\n  _s();\n\n  const [fetchData, setFetchData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n  useEffect(() => {\n    const getCourses = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`);\n        const data = await response.json();\n        setFetchData(data);\n      } catch (error) {\n        console.error(\"Error fetching courses:\", error);\n      }\n    };\n\n    getCourses();\n  }, []);\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\"\n    });\n    setCurrentPage(selected);\n  };\n\n  const totalCourses = fetchData.length;\n  const pageCount = Math.ceil(totalCourses / coursesPerPage);\n\n  const renderCourses = () => {\n    const startIndex = currentPage * coursesPerPage;\n    const selectedCourses = fetchData.slice(startIndex, startIndex + coursesPerPage);\n    return selectedCourses.map(course => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"course-item row align-items-center d-flex flex-wrap border rounded p-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-9 col-md-9 col-sm-12 col-xs-12 d-flex align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"course-name text-start m-0\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: course.courseData.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-lg-3 col-md-3 col-sm-12 col-xs-12 d-flex justify-content-end align-items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: `btn2  ${course.active ? \"btn-deactivate\" : \"btn-activate\"} me-2`,\n          onClick: () => handleActivateCourse(course.id),\n          children: course.active ? \"Deactivate\" : \"Activate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn2 btn-modify me-2\",\n          onClick: () => handleModify(course.id),\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn2 btn-delete me-2\",\n          onClick: () => handleDelete(course.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this)]\n    }, course.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this));\n  }; // Function to handle course activation\n\n\n  const handleActivateCourse = courseId => {\n    // Show a notification\n    showNotification(\"Are you sure you want to activate this course?\", () => {\n      // If the user confirms, show the SweetAlert modal\n      Swal.fire({\n        title: 'Confirm Activation',\n        text: 'Are you sure you want to activate this course?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Activate',\n        cancelButtonText: 'Cancel'\n      }).then(result => {\n        // Handle user's response\n        if (result.isConfirmed) {\n          // User confirmed, proceed with activation\n          activateCourse(courseId);\n        } else {\n          // User canceled, do nothing or show another notification\n          // For example:\n          showNotification(\"Course activation canceled.\");\n        }\n      });\n    });\n  }; // Function to activate the course (replace with your actual activation logic)\n\n\n  const activateCourse = courseId => {\n    // Placeholder function for activating the course\n    console.log(\"Course activated:\", courseId);\n  }; // Function to show a notification\n\n\n  const showNotification = (message, callback) => {\n    // Placeholder function for showing a notification\n    console.log(\"Notification:\", message); // Execute callback function if provided\n\n    if (callback && typeof callback === \"function\") {\n      callback();\n    }\n  };\n\n  const handleActivate = id => {// Logic to activate the course with the given id\n  };\n\n  const handleDelete = id => {// Logic to delete the course with the given id\n  };\n\n  const handleModify = id => {// Logic to modify the course with the given id\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-4\",\n    children: [renderCourses(), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n      previousLabel: \"Previous\",\n      nextLabel: \"Next\",\n      breakLabel: \"...\",\n      pageCount: pageCount,\n      marginPagesDisplayed: 2,\n      pageRangeDisplayed: 5,\n      onPageChange: handlePageChange,\n      containerClassName: \"pagination\",\n      activeClassName: \"active\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AdminAllCourses, \"l6aKGHIfCy7o/Kh9dgdLB70z48U=\");\n\n_c = AdminAllCourses;\nexport default AdminAllCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminAllCourses\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/admin-all-courses/AdminCourseSection.js"],"names":["React","useEffect","useState","ReactPaginate","Swal","AdminAllCourses","fetchData","setFetchData","currentPage","setCurrentPage","coursesPerPage","getCourses","response","fetch","process","env","REACT_APP_ROOT_URL","REACT_APP_COURSES_GET_ALL","data","json","error","console","handlePageChange","selected","window","scrollTo","top","behavior","totalCourses","length","pageCount","Math","ceil","renderCourses","startIndex","selectedCourses","slice","map","course","courseData","name","active","handleActivateCourse","id","handleModify","handleDelete","courseId","showNotification","fire","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","isConfirmed","activateCourse","log","message","callback","handleActivate"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport ReactPaginate from \"react-paginate\";\nimport Swal from \"sweetalert2\";\n\nconst AdminAllCourses = () => {\n\tconst [fetchData, setFetchData] = useState([]);\n\tconst [currentPage, setCurrentPage] = useState(0);\n\tconst coursesPerPage = 9;\n\n\tuseEffect(() => {\n\t\tconst getCourses = async () => {\n\t\t\ttry {\n\t\t\t\tconst response = await fetch(\n\t\t\t\t\t`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`\n\t\t\t\t);\n\t\t\t\tconst data = await response.json();\n\t\t\t\tsetFetchData(data);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error(\"Error fetching courses:\", error);\n\t\t\t}\n\t\t};\n\n\t\tgetCourses();\n\t}, []);\n\n\tconst handlePageChange = ({ selected }) => {\n\t\twindow.scrollTo({\n\t\t\ttop: 250,\n\t\t\tbehavior: \"smooth\",\n\t\t});\n\t\tsetCurrentPage(selected);\n\t};\n\n\tconst totalCourses = fetchData.length;\n\tconst pageCount = Math.ceil(totalCourses / coursesPerPage);\n\n\tconst renderCourses = () => {\n\t\tconst startIndex = currentPage * coursesPerPage;\n\t\tconst selectedCourses = fetchData.slice(\n\t\t\tstartIndex,\n\t\t\tstartIndex + coursesPerPage\n\t\t);\n\n\t\treturn selectedCourses.map((course) => (\n\t\t\t<div\n\t\t\t\tkey={course.id}\n\t\t\t\tclassName=\"course-item row align-items-center d-flex flex-wrap border rounded p-3 mb-3\"\n\t\t\t>\n\t\t\t\t<div className=\"col-lg-9 col-md-9 col-sm-12 col-xs-12 d-flex align-items-center\">\n\t\t\t\t\t<p className=\"course-name text-start m-0\"><strong>{course.courseData.name}</strong></p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"col-lg-3 col-md-3 col-sm-12 col-xs-12 d-flex justify-content-end align-items-center\">\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName={`btn2  ${course.active ? \"btn-deactivate\" : \"btn-activate\"} me-2`}\n\t\t\t\t\t\tonClick={() => handleActivateCourse(course.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\t{course.active ? \"Deactivate\" : \"Activate\"}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button\n\t\t\t\t\t\tclassName=\"btn2 btn-modify me-2\"\n\t\t\t\t\t\tonClick={() => handleModify(course.id)}\n\t\t\t\t\t>\n\t\t\t\t\t\tModify\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<button className=\"btn2 btn-delete me-2\" onClick={() => handleDelete(course.id)}>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t));\n\t};\n\n\t// Function to handle course activation\nconst handleActivateCourse = (courseId) => {\n\t// Show a notification\n\tshowNotification(\"Are you sure you want to activate this course?\", () => {\n\t\t\t\t\t// If the user confirms, show the SweetAlert modal\n\t\t\t\t\tSwal.fire({\n\t\t\t\t\t\t\t\t\ttitle: 'Confirm Activation',\n\t\t\t\t\t\t\t\t\ttext: 'Are you sure you want to activate this course?',\n\t\t\t\t\t\t\t\t\ticon: 'warning',\n\t\t\t\t\t\t\t\t\tshowCancelButton: true,\n\t\t\t\t\t\t\t\t\tconfirmButtonColor: '#3085d6',\n\t\t\t\t\t\t\t\t\tcancelButtonColor: '#d33',\n\t\t\t\t\t\t\t\t\tconfirmButtonText: 'Activate',\n\t\t\t\t\t\t\t\t\tcancelButtonText: 'Cancel'\n\t\t\t\t\t}).then((result) => {\n\t\t\t\t\t\t\t\t\t// Handle user's response\n\t\t\t\t\t\t\t\t\tif (result.isConfirmed) {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// User confirmed, proceed with activation\n\t\t\t\t\t\t\t\t\t\t\t\t\tactivateCourse(courseId);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\t\t\t// User canceled, do nothing or show another notification\n\t\t\t\t\t\t\t\t\t\t\t\t\t// For example:\n\t\t\t\t\t\t\t\t\t\t\t\t\tshowNotification(\"Course activation canceled.\");\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t});\n};\n\n// Function to activate the course (replace with your actual activation logic)\nconst activateCourse = (courseId) => {\n\t// Placeholder function for activating the course\n\tconsole.log(\"Course activated:\", courseId);\n};\n\n// Function to show a notification\nconst showNotification = (message, callback) => {\n\t// Placeholder function for showing a notification\n\tconsole.log(\"Notification:\", message);\n\t// Execute callback function if provided\n\tif (callback && typeof callback === \"function\") {\n\t\t\t\t\tcallback();\n\t}\n};\n\n\n\tconst handleActivate = (id) => {\n\t\t// Logic to activate the course with the given id\n\n\n\n\t};\n\n\tconst handleDelete = (id) => {\n\t\t// Logic to delete the course with the given id\n\t};\n\n\tconst handleModify = (id) => {\n\t\t// Logic to modify the course with the given id\n\t};\n\n\treturn (\n\t\t<div className=\"container mt-4\">\n\t\t\t{renderCourses()}\n\t\t\t<ReactPaginate\n\t\t\t\tpreviousLabel={\"Previous\"}\n\t\t\t\tnextLabel={\"Next\"}\n\t\t\t\tbreakLabel={\"...\"}\n\t\t\t\tpageCount={pageCount}\n\t\t\t\tmarginPagesDisplayed={2}\n\t\t\t\tpageRangeDisplayed={5}\n\t\t\t\tonPageChange={handlePageChange}\n\t\t\t\tcontainerClassName={\"pagination\"}\n\t\t\t\tactiveClassName={\"active\"}\n\t\t\t/>\n\t\t</div>\n\t);\n};\nexport default AdminAllCourses;\n"]},"metadata":{},"sourceType":"module"}