{"ast":null,"code":"'use strict';\n\nvar createStoreImpl = function createStoreImpl(createState) {\n  var state;\n  var listeners = new Set();\n\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n\n    if (!Object.is(nextState, state)) {\n      var _previousState = state;\n      state = (replace != null ? replace : typeof nextState !== 'object' || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n\n  var getState = function getState() {\n    return state;\n  };\n\n  var getInitialState = function getInitialState() {\n    return initialState;\n  };\n\n  var subscribe = function subscribe(listener) {\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n\n  var destroy = function destroy() {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.');\n    }\n\n    listeners.clear();\n  };\n\n  var api = {\n    setState: setState,\n    getState: getState,\n    getInitialState: getInitialState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  var initialState = state = createState(setState, getState, api);\n  return api;\n};\n\nvar createStore = function createStore(createState) {\n  return createState ? createStoreImpl(createState) : createStoreImpl;\n};\n\nvar vanilla = function (createState) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\");\n  }\n\n  return createStore(createState);\n};\n\nexports.createStore = createStore;\nexports.default = vanilla;\nmodule.exports = vanilla;\nmodule.exports.createStore = createStore;\nexports.default = module.exports;","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/node_modules/zustand/vanilla.js"],"names":["createStoreImpl","createState","state","listeners","Set","setState","partial","replace","nextState","Object","is","_previousState","assign","forEach","listener","getState","getInitialState","initialState","subscribe","add","delete","destroy","process","env","NODE_ENV","console","warn","clear","api","createStore","vanilla","exports","default","module"],"mappings":"AAAA;;AAEA,IAAIA,eAAe,GAAG,SAASA,eAAT,CAAyBC,WAAzB,EAAsC;AAC1D,MAAIC,KAAJ;AACA,MAAIC,SAAS,GAAG,IAAIC,GAAJ,EAAhB;;AACA,MAAIC,QAAQ,GAAG,SAASA,QAAT,CAAkBC,OAAlB,EAA2BC,OAA3B,EAAoC;AACjD,QAAIC,SAAS,GAAG,OAAOF,OAAP,KAAmB,UAAnB,GAAgCA,OAAO,CAACJ,KAAD,CAAvC,GAAiDI,OAAjE;;AACA,QAAI,CAACG,MAAM,CAACC,EAAP,CAAUF,SAAV,EAAqBN,KAArB,CAAL,EAAkC;AAChC,UAAIS,cAAc,GAAGT,KAArB;AACAA,MAAAA,KAAK,GAAG,CAACK,OAAO,IAAI,IAAX,GAAkBA,OAAlB,GAA4B,OAAOC,SAAP,KAAqB,QAArB,IAAiCA,SAAS,KAAK,IAA5E,IAAoFA,SAApF,GAAgGC,MAAM,CAACG,MAAP,CAAc,EAAd,EAAkBV,KAAlB,EAAyBM,SAAzB,CAAxG;AACAL,MAAAA,SAAS,CAACU,OAAV,CAAkB,UAAUC,QAAV,EAAoB;AACpC,eAAOA,QAAQ,CAACZ,KAAD,EAAQS,cAAR,CAAf;AACD,OAFD;AAGD;AACF,GATD;;AAUA,MAAII,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjC,WAAOb,KAAP;AACD,GAFD;;AAGA,MAAIc,eAAe,GAAG,SAASA,eAAT,GAA2B;AAC/C,WAAOC,YAAP;AACD,GAFD;;AAGA,MAAIC,SAAS,GAAG,SAASA,SAAT,CAAmBJ,QAAnB,EAA6B;AAC3CX,IAAAA,SAAS,CAACgB,GAAV,CAAcL,QAAd;AACA,WAAO,YAAY;AACjB,aAAOX,SAAS,CAACiB,MAAV,CAAiBN,QAAjB,CAAP;AACD,KAFD;AAGD,GALD;;AAMA,MAAIO,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,MAAAA,OAAO,CAACC,IAAR,CAAa,wMAAb;AACD;;AACDvB,IAAAA,SAAS,CAACwB,KAAV;AACD,GALD;;AAMA,MAAIC,GAAG,GAAG;AACRvB,IAAAA,QAAQ,EAAEA,QADF;AAERU,IAAAA,QAAQ,EAAEA,QAFF;AAGRC,IAAAA,eAAe,EAAEA,eAHT;AAIRE,IAAAA,SAAS,EAAEA,SAJH;AAKRG,IAAAA,OAAO,EAAEA;AALD,GAAV;AAOA,MAAIJ,YAAY,GAAGf,KAAK,GAAGD,WAAW,CAACI,QAAD,EAAWU,QAAX,EAAqBa,GAArB,CAAtC;AACA,SAAOA,GAAP;AACD,CAxCD;;AAyCA,IAAIC,WAAW,GAAG,SAASA,WAAT,CAAqB5B,WAArB,EAAkC;AAClD,SAAOA,WAAW,GAAGD,eAAe,CAACC,WAAD,CAAlB,GAAkCD,eAApD;AACD,CAFD;;AAGA,IAAI8B,OAAO,GAAI,UAAU7B,WAAV,EAAuB;AACpC,MAAIqB,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzCC,IAAAA,OAAO,CAACC,IAAR,CAAa,uGAAb;AACD;;AACD,SAAOG,WAAW,CAAC5B,WAAD,CAAlB;AACD,CALD;;AAOA8B,OAAO,CAACF,WAAR,GAAsBA,WAAtB;AACAE,OAAO,CAACC,OAAR,GAAkBF,OAAlB;AAEAG,MAAM,CAACF,OAAP,GAAiBD,OAAjB;AACAG,MAAM,CAACF,OAAP,CAAeF,WAAf,GAA6BA,WAA7B;AACAE,OAAO,CAACC,OAAR,GAAkBC,MAAM,CAACF,OAAzB","sourcesContent":["'use strict';\n\nvar createStoreImpl = function createStoreImpl(createState) {\n  var state;\n  var listeners = new Set();\n  var setState = function setState(partial, replace) {\n    var nextState = typeof partial === 'function' ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      var _previousState = state;\n      state = (replace != null ? replace : typeof nextState !== 'object' || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach(function (listener) {\n        return listener(state, _previousState);\n      });\n    }\n  };\n  var getState = function getState() {\n    return state;\n  };\n  var getInitialState = function getInitialState() {\n    return initialState;\n  };\n  var subscribe = function subscribe(listener) {\n    listeners.add(listener);\n    return function () {\n      return listeners.delete(listener);\n    };\n  };\n  var destroy = function destroy() {\n    if (process.env.NODE_ENV !== 'production') {\n      console.warn('[DEPRECATED] The `destroy` method will be unsupported in a future version. Instead use unsubscribe function returned by subscribe. Everything will be garbage-collected if store is garbage-collected.');\n    }\n    listeners.clear();\n  };\n  var api = {\n    setState: setState,\n    getState: getState,\n    getInitialState: getInitialState,\n    subscribe: subscribe,\n    destroy: destroy\n  };\n  var initialState = state = createState(setState, getState, api);\n  return api;\n};\nvar createStore = function createStore(createState) {\n  return createState ? createStoreImpl(createState) : createStoreImpl;\n};\nvar vanilla = (function (createState) {\n  if (process.env.NODE_ENV !== 'production') {\n    console.warn(\"[DEPRECATED] Default export is deprecated. Instead use import { createStore } from 'zustand/vanilla'.\");\n  }\n  return createStore(createState);\n});\n\nexports.createStore = createStore;\nexports.default = vanilla;\n\nmodule.exports = vanilla;\nmodule.exports.createStore = createStore;\nexports.default = module.exports;\n"]},"metadata":{},"sourceType":"script"}