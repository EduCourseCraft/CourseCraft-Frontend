{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/admin-all-courses/AdminCourseSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\"; // import { Link } from \"react-router-dom\";\n\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\"; // Course courseImg\n\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst AdminAllCourses = () => {\n  _s();\n\n  ////////////////////////////\n  // GET COURSES DATA\n  ////////////////////////////\n  const [fetchData, setFetchData] = useState([]);\n  useEffect(() => {\n    const getCourses = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`);\n        const data = await response.json();\n        setFetchData(data);\n        console.log(data);\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    getCourses(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); ////////////////////////////\n  // RENDER CATEGORIES TABS\n  ////////////////////////////\n\n  const [fetchedCategories, setFetchedCategories] = useState([]);\n  const [activeCategory, setActiveCategory] = useState(undefined);\n  const [currentPage, setCurrentPage] = useState(0);\n  const coursesPerPage = 9;\n  useEffect(() => {\n    const fetchCategories = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`);\n        const data = await response.json();\n        const filtered = data.filter(category => category.active === true);\n        console.log(filtered);\n        filtered.unshift({\n          id: 12341,\n          name: \"Mostrar todo\"\n        });\n        setFetchedCategories(filtered);\n        setActiveCategory(\"Mostrar todo\");\n      } catch (error) {\n        console.error(\"Error fetching categories:\", error);\n      }\n    };\n\n    fetchCategories();\n  }, []);\n\n  const handleTabClick = category => {\n    setActiveCategory(category);\n    setCurrentPage(0);\n  };\n\n  const handlePageChange = ({\n    selected\n  }) => {\n    window.scrollTo({\n      top: 250,\n      behavior: \"smooth\"\n    });\n    setCurrentPage(selected);\n  };\n\n  const totalCourses = activeCategory === \"Mostrar todo\" ? fetchData.length : fetchData.filter(course => course.courseData.category.includes(activeCategory)).length;\n  const pageCount = Math.ceil(totalCourses / coursesPerPage);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"rs-popular-course\",\n    className: \"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        children: [/*#__PURE__*/_jsxDEV(TabList, {\n          className: \"gridFilter text-center mb-10 md-mb-10\",\n          children: fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(Tab, {\n            onClick: () => handleTabClick(category.name),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 9\n            }, this)\n          }, category.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 8\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 6\n        }, this), fetchedCategories.map(category => /*#__PURE__*/_jsxDEV(TabPanel, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: category.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 9\n            }, this), renderCoursePanel(category.name), /*#__PURE__*/_jsxDEV(ReactPaginate, {\n              className: \"pagination\",\n              previousLabel: \"Previous\",\n              nextLabel: \"Next\",\n              breakLabel: \"...\",\n              pageCount: pageCount,\n              marginPagesDisplayed: 2,\n              pageRangeDisplayed: 5,\n              onPageChange: handlePageChange,\n              containerClassName: \"pagination\",\n              activeClassName: \"active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 8\n          }, this)\n        }, category.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 7\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }, this);\n};\n\n_s(AdminAllCourses, \"XoRSGCx3fKTj/TDZ7e3kDbuU3hw=\");\n\n_c = AdminAllCourses;\nexport default AdminAllCourses;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminAllCourses\");","map":{"version":3,"sources":["/home/dresito/GitHub/Trade-Learn-Frontend/src/pages/admin-all-courses/AdminCourseSection.js"],"names":["React","useEffect","useState","Tab","Tabs","TabList","TabPanel","CourseSingleTwo","ReactPaginate","courseImg1","AdminAllCourses","fetchData","setFetchData","getCourses","response","fetch","process","env","REACT_APP_ROOT_URL","REACT_APP_COURSES_GET_ALL","data","json","console","log","error","fetchedCategories","setFetchedCategories","activeCategory","setActiveCategory","undefined","currentPage","setCurrentPage","coursesPerPage","fetchCategories","REACT_APP_CATEGORIES_GET_ALL","filtered","filter","category","active","unshift","id","name","handleTabClick","handlePageChange","selected","window","scrollTo","top","behavior","totalCourses","length","course","courseData","includes","pageCount","Math","ceil","map","renderCoursePanel"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\n// import { Link } from \"react-router-dom\";\nimport { Tab, Tabs, TabList, TabPanel } from \"react-tabs\";\nimport CourseSingleTwo from \"../../components/Courses/CourseSingleTwo\";\nimport ReactPaginate from \"react-paginate\";\n\n// Course courseImg\nimport courseImg1 from \"../../assets/img/courses/1.jpg\";\n\nconst AdminAllCourses = () => {\n\n ////////////////////////////\n // GET COURSES DATA\n ////////////////////////////\n\nconst [fetchData, setFetchData] = useState([]);\n\n useEffect(() => {\n  const getCourses = async () => {\n   try {\n    const response = await fetch(\n     `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_COURSES_GET_ALL}`\n    );\n    const data = await response.json();\n    setFetchData(data)\n\n    console.log(data);\n   } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n   }\n  };\n\n  getCourses();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n }, []);\n\n\n ////////////////////////////\n // RENDER CATEGORIES TABS\n ////////////////////////////\n const [fetchedCategories, setFetchedCategories] = useState([]);\n const [activeCategory, setActiveCategory] = useState(undefined);\n const [currentPage, setCurrentPage] = useState(0);\n const coursesPerPage = 9;\n\n useEffect(() => {\n  const fetchCategories = async () => {\n   try {\n    const response = await fetch(\n     `${process.env.REACT_APP_ROOT_URL}${process.env.REACT_APP_CATEGORIES_GET_ALL}`\n    );\n    const data = await response.json();\n    const filtered = data.filter((category) => category.active === true);\n    console.log(filtered)\n    filtered.unshift({\n     id: 12341,\n     name: \"Mostrar todo\",\n    })\n\n    setFetchedCategories(filtered);\n    setActiveCategory(\"Mostrar todo\");\n   } catch (error) {\n    console.error(\"Error fetching categories:\", error);\n   }\n  };\n\n  fetchCategories();\n }, []);\n\n\n const handleTabClick = (category) => {\n  setActiveCategory(category);\n  setCurrentPage(0);\n };\n\n const handlePageChange = ({ selected }) => {\n  window.scrollTo({\n   top: 250,\n   behavior: \"smooth\",\n  });\n  setCurrentPage(selected);\n };\n\n const totalCourses = activeCategory === \"Mostrar todo\"\n  ? fetchData.length\n  : fetchData.filter((course) =>\n   course.courseData.category.includes(activeCategory)\n  ).length;\n\n const pageCount = Math.ceil(totalCourses / coursesPerPage);\n\n return (\n  <div\n   id=\"rs-popular-course\"\n   className=\"rs-popular-courses style1 orange-style pt-50 pb-100 md-pt-70 md-pb-50\"\n  >\n   <div className=\"container\">\n    <Tabs>\n     <TabList className=\"gridFilter text-center mb-10 md-mb-10\">\n      {fetchedCategories.map((category) => (\n       <Tab key={category.id} onClick={() => handleTabClick(category.name)}>\n        <button>{category.name}</button>\n       </Tab>\n      ))}\n     </TabList>\n     {fetchedCategories.map((category) => (\n      <TabPanel key={category.id}>\n       <div>\n        <h2>{category.name}</h2>\n        {renderCoursePanel(category.name)}\n        <ReactPaginate\n         className=\"pagination\"\n         previousLabel={\"Previous\"}\n         nextLabel={\"Next\"}\n         breakLabel={\"...\"}\n         pageCount={pageCount}\n         marginPagesDisplayed={2}\n         pageRangeDisplayed={5}\n         onPageChange={handlePageChange}\n         containerClassName={\"pagination\"}\n         activeClassName={\"active\"}\n        />\n       </div>\n      </TabPanel>\n     ))}\n    </Tabs>\n   </div>\n  </div>\n );\n};\n\nexport default AdminAllCourses;\n"]},"metadata":{},"sourceType":"module"}